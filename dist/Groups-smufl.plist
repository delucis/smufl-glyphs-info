{
	languages = (
		{
			icon = "MusicTemplate";
			name = "SMuFL";
			subGroup = (
			{
				list = (
				"accdnRH3RanksPiccolo",
				"accdnRH3RanksClarinet",
				"accdnRH3RanksUpperTremolo8",
				"accdnRH3RanksLowerTremolo8",
				"accdnRH3RanksBassoon",
				"accdnRH3RanksOboe",
				"accdnRH3RanksViolin",
				"accdnRH3RanksImitationMusette",
				"accdnRH3RanksAuthenticMusette",
				"accdnRH3RanksOrgan",
				"accdnRH3RanksHarmonium",
				"accdnRH3RanksBandoneon",
				"accdnRH3RanksAccordion",
				"accdnRH3RanksMaster",
				"accdnRH3RanksTwoChoirs",
				"accdnRH3RanksTremoloLower8ve",
				"accdnRH3RanksTremoloUpper8ve",
				"accdnRH3RanksDoubleTremoloLower8ve",
				"accdnRH3RanksDoubleTremoloUpper8ve",
				"accdnRH3RanksFullFactory",
				"accdnRH4RanksSoprano",
				"accdnRH4RanksAlto",
				"accdnRH4RanksTenor",
				"accdnRH4RanksMaster",
				"accdnRH4RanksSoftBass",
				"accdnRH4RanksSoftTenor",
				"accdnRH4RanksBassAlto",
				"accdnLH2Ranks8Round",
				"accdnLH2Ranks16Round",
				"accdnLH2Ranks8Plus16Round",
				"accdnLH2RanksMasterRound",
				"accdnLH2RanksMasterPlus16Round",
				"accdnLH2RanksFullMasterRound",
				"accdnLH3Ranks8Square",
				"accdnLH3Ranks2Square",
				"accdnLH3RanksDouble8Square",
				"accdnLH3Ranks2Plus8Square",
				"accdnLH3RanksTuttiSquare",
				"accdnCombRH3RanksEmpty",
				"accdnCombRH4RanksEmpty",
				"accdnCombLH2RanksEmpty",
				"accdnCombLH3RanksEmptySquare",
				"accdnCombDot",
				"accdnPush",
				"accdnPull",
				"accdnRicochet2",
				"accdnRicochet3",
				"accdnRicochet4",
				"accdnRicochet5",
				"accdnRicochet6",
				"accdnRicochetStem2",
				"accdnRicochetStem3",
				"accdnRicochetStem4",
				"accdnRicochetStem5",
				"accdnRicochetStem6"
				);
				name = "Accordion";
			},
			{
				list = (
				"analyticsHauptstimme",
				"analyticsNebenstimme",
				"analyticsStartStimme",
				"analyticsEndStimme",
				"analyticsTheme",
				"analyticsThemeRetrograde",
				"analyticsThemeRetrogradeInversion",
				"analyticsThemeInversion",
				"analyticsTheme1",
				"analyticsInversion1",
				"analyticsChoralmelodie",
				"analyticsHauptrhythmus"
				);
				name = "Analytics";
			},
			{
				list = (
				"accidentalDoubleFlatArabic",
				"accidentalThreeQuarterTonesFlatArabic",
				"accidentalFlatArabic",
				"accidentalQuarterToneFlatArabic",
				"accidentalNaturalArabic",
				"accidentalQuarterToneSharpArabic",
				"accidentalSharpArabic",
				"accidentalThreeQuarterTonesSharpArabic",
				"accidentalDoubleSharpArabic"
				);
				name = "Arabic accidentals";
			},
			{
				list = (
				"accidentalBuyukMucennebFlat",
				"accidentalKucukMucennebFlat",
				"accidentalBakiyeFlat",
				"accidentalKomaFlat",
				"accidentalKomaSharp",
				"accidentalBakiyeSharp",
				"accidentalKucukMucennebSharp",
				"accidentalBuyukMucennebSharp"
				);
				name = "Arel-Ezgi-Uzdilek (AEU) accidentals";
			},
			{
				list = (
				"arrowBlackUp",
				"arrowBlackUpRight",
				"arrowBlackRight",
				"arrowBlackDownRight",
				"arrowBlackDown",
				"arrowBlackDownLeft",
				"arrowBlackLeft",
				"arrowBlackUpLeft",
				"arrowWhiteUp",
				"arrowWhiteUpRight",
				"arrowWhiteRight",
				"arrowWhiteDownRight",
				"arrowWhiteDown",
				"arrowWhiteDownLeft",
				"arrowWhiteLeft",
				"arrowWhiteUpLeft",
				"arrowOpenUp",
				"arrowOpenUpRight",
				"arrowOpenRight",
				"arrowOpenDownRight",
				"arrowOpenDown",
				"arrowOpenDownLeft",
				"arrowOpenLeft",
				"arrowOpenUpLeft",
				"arrowheadBlackUp",
				"arrowheadBlackUpRight",
				"arrowheadBlackRight",
				"arrowheadBlackDownRight",
				"arrowheadBlackDown",
				"arrowheadBlackDownLeft",
				"arrowheadBlackLeft",
				"arrowheadBlackUpLeft",
				"arrowheadWhiteUp",
				"arrowheadWhiteUpRight",
				"arrowheadWhiteRight",
				"arrowheadWhiteDownRight",
				"arrowheadWhiteDown",
				"arrowheadWhiteDownLeft",
				"arrowheadWhiteLeft",
				"arrowheadWhiteUpLeft",
				"arrowheadOpenUp",
				"arrowheadOpenUpRight",
				"arrowheadOpenRight",
				"arrowheadOpenDownRight",
				"arrowheadOpenDown",
				"arrowheadOpenDownLeft",
				"arrowheadOpenLeft",
				"arrowheadOpenUpLeft"
				);
				name = "Arrows and arrowheads";
			},
			{
				list = (
				"articAccentAbove",
				"articAccentBelow",
				"articStaccatoAbove",
				"articStaccatoBelow",
				"articTenutoAbove",
				"articTenutoBelow",
				"articStaccatissimoAbove",
				"articStaccatissimoBelow",
				"articStaccatissimoWedgeAbove",
				"articStaccatissimoWedgeBelow",
				"articStaccatissimoStrokeAbove",
				"articStaccatissimoStrokeBelow",
				"articMarcatoAbove",
				"articMarcatoBelow",
				"articMarcatoStaccatoAbove",
				"articMarcatoStaccatoBelow",
				"articAccentStaccatoAbove",
				"articAccentStaccatoBelow",
				"articTenutoStaccatoAbove",
				"articTenutoStaccatoBelow",
				"articTenutoAccentAbove",
				"articTenutoAccentBelow",
				"articStressAbove",
				"articStressBelow",
				"articUnstressAbove",
				"articUnstressBelow",
				"articLaissezVibrerAbove",
				"articLaissezVibrerBelow",
				"articMarcatoTenutoAbove",
				"articMarcatoTenutoBelow"
				);
				name = "Articulation";
			},
			{
				list = (
				"articSoftAccentAbove",
				"articSoftAccentBelow",
				"articSoftAccentStaccatoAbove",
				"articSoftAccentStaccatoBelow",
				"articSoftAccentTenutoAbove",
				"articSoftAccentTenutoBelow",
				"articSoftAccentTenutoStaccatoAbove",
				"articSoftAccentTenutoStaccatoBelow"
				);
				name = "Articulation supplement";
			},
			{
				list = (
				"accSagittal7v11KleismaUp",
				"accSagittal7v11KleismaDown",
				"accSagittal17CommaUp",
				"accSagittal17CommaDown",
				"accSagittal55CommaUp",
				"accSagittal55CommaDown",
				"accSagittal7v11CommaUp",
				"accSagittal7v11CommaDown",
				"accSagittal5v11SmallDiesisUp",
				"accSagittal5v11SmallDiesisDown",
				"accSagittalSharp5v11SDown",
				"accSagittalFlat5v11SUp",
				"accSagittalSharp7v11CDown",
				"accSagittalFlat7v11CUp",
				"accSagittalSharp55CDown",
				"accSagittalFlat55CUp",
				"accSagittalSharp17CDown",
				"accSagittalFlat17CUp",
				"accSagittalSharp7v11kDown",
				"accSagittalFlat7v11kUp",
				"accSagittalSharp7v11kUp",
				"accSagittalFlat7v11kDown",
				"accSagittalSharp17CUp",
				"accSagittalFlat17CDown",
				"accSagittalSharp55CUp",
				"accSagittalFlat55CDown",
				"accSagittalSharp7v11CUp",
				"accSagittalFlat7v11CDown",
				"accSagittalSharp5v11SUp",
				"accSagittalFlat5v11SDown",
				"accSagittalDoubleSharp5v11SDown",
				"accSagittalDoubleFlat5v11SUp",
				"accSagittalDoubleSharp7v11CDown",
				"accSagittalDoubleFlat7v11CUp",
				"accSagittalDoubleSharp55CDown",
				"accSagittalDoubleFlat55CUp",
				"accSagittalDoubleSharp17CDown",
				"accSagittalDoubleFlat17CUp",
				"accSagittalDoubleSharp7v11kDown",
				"accSagittalDoubleFlat7v11kUp"
				);
				name = "Athenian Sagittal extension (medium precision) accidentals";
			},
			{
				list = (
				"repeat1Bar",
				"repeat2Bars",
				"repeat4Bars",
				"repeatBarUpperDot",
				"repeatBarSlash",
				"repeatBarLowerDot"
				);
				name = "Bar repeats";
			},
			{
				list = (
				"barlineSingle",
				"barlineDouble",
				"barlineFinal",
				"barlineReverseFinal",
				"barlineHeavy",
				"barlineHeavyHeavy",
				"barlineDashed",
				"barlineDotted",
				"barlineShort",
				"barlineTick"
				);
				name = "Barlines";
			},
			{
				list = (
				"textBlackNoteShortStem",
				"textBlackNoteLongStem",
				"textBlackNoteFrac8thShortStem",
				"textBlackNoteFrac8thLongStem",
				"textBlackNoteFrac16thShortStem",
				"textBlackNoteFrac16thLongStem",
				"textBlackNoteFrac32ndLongStem",
				"textCont8thBeamShortStem",
				"textCont8thBeamLongStem",
				"textCont16thBeamShortStem",
				"textCont16thBeamLongStem",
				"textCont32ndBeamLongStem",
				"textAugmentationDot",
				"textTie",
				"textTupletBracketStartShortStem",
				"textTuplet3ShortStem",
				"textTupletBracketEndShortStem",
				"textTupletBracketStartLongStem",
				"textTuplet3LongStem",
				"textTupletBracketEndLongStem"
				);
				name = "Beamed groups of notes";
			},
			{
				list = (
				"controlBeginBeam",
				"controlEndBeam",
				"controlBeginTie",
				"controlEndTie",
				"controlBeginSlur",
				"controlEndSlur",
				"controlBeginPhrase",
				"controlEndPhrase"
				);
				name = "Beams and slurs";
			},
			{
				list = ( 
				"pictBeaterSoftXylophoneUp",
				"pictBeaterSoftXylophoneDown",
				"pictBeaterSoftXylophoneRight",
				"pictBeaterSoftXylophoneLeft",
				"pictBeaterMediumXylophoneUp",
				"pictBeaterMediumXylophoneDown",
				"pictBeaterMediumXylophoneRight",
				"pictBeaterMediumXylophoneLeft",
				"pictBeaterHardXylophoneUp",
				"pictBeaterHardXylophoneDown",
				"pictBeaterHardXylophoneRight",
				"pictBeaterHardXylophoneLeft",
				"pictBeaterWoodXylophoneUp",
				"pictBeaterWoodXylophoneDown",
				"pictBeaterWoodXylophoneRight",
				"pictBeaterWoodXylophoneLeft",
				"pictBeaterSoftGlockenspielUp",
				"pictBeaterSoftGlockenspielDown",
				"pictBeaterSoftGlockenspielRight",
				"pictBeaterSoftGlockenspielLeft",
				"pictBeaterHardGlockenspielUp",
				"pictBeaterHardGlockenspielDown",
				"pictBeaterHardGlockenspielRight",
				"pictBeaterHardGlockenspielLeft",
				"pictBeaterSoftTimpaniUp",
				"pictBeaterSoftTimpaniDown",
				"pictBeaterSoftTimpaniRight",
				"pictBeaterSoftTimpaniLeft",
				"pictBeaterMediumTimpaniUp",
				"pictBeaterMediumTimpaniDown",
				"pictBeaterMediumTimpaniRight",
				"pictBeaterMediumTimpaniLeft",
				"pictBeaterHardTimpaniUp",
				"pictBeaterHardTimpaniDown",
				"pictBeaterHardTimpaniRight",
				"pictBeaterHardTimpaniLeft",
				"pictBeaterWoodTimpaniUp",
				"pictBeaterWoodTimpaniDown",
				"pictBeaterWoodTimpaniRight",
				"pictBeaterWoodTimpaniLeft",
				"pictBeaterSoftBassDrumUp",
				"pictBeaterSoftBassDrumDown",
				"pictBeaterMediumBassDrumUp",
				"pictBeaterMediumBassDrumDown",
				"pictBeaterHardBassDrumUp",
				"pictBeaterHardBassDrumDown",
				"pictBeaterMetalBassDrumUp",
				"pictBeaterMetalBassDrumDown",
				"pictBeaterDoubleBassDrumUp",
				"pictBeaterDoubleBassDrumDown",
				"pictBeaterSoftYarnUp",
				"pictBeaterSoftYarnDown",
				"pictBeaterSoftYarnRight",
				"pictBeaterSoftYarnLeft",
				"pictBeaterMediumYarnUp",
				"pictBeaterMediumYarnDown",
				"pictBeaterMediumYarnRight",
				"pictBeaterMediumYarnLeft",
				"pictBeaterHardYarnUp",
				"pictBeaterHardYarnDown",
				"pictBeaterHardYarnRight",
				"pictBeaterHardYarnLeft",
				"pictBeaterSuperballUp",
				"pictBeaterSuperballDown",
				"pictBeaterSuperballRight",
				"pictBeaterSuperballLeft",
				"pictSuperball",
				"pictWoundHardUp",
				"pictWoundHardDown",
				"pictWoundHardRight",
				"pictWoundHardLeft",
				"pictWoundSoftUp",
				"pictWoundSoftDown",
				"pictWoundSoftRight",
				"pictWoundSoftLeft",
				"pictGumSoftUp",
				"pictGumSoftDown",
				"pictGumSoftRight",
				"pictGumSoftLeft",
				"pictGumMediumUp",
				"pictGumMediumDown",
				"pictGumMediumRight",
				"pictGumMediumLeft",
				"pictGumHardUp",
				"pictGumHardDown",
				"pictGumHardRight",
				"pictGumHardLeft",
				"pictBeaterMetalUp",
				"pictBeaterMetalDown",
				"pictBeaterMetalRight",
				"pictBeaterMetalLeft",
				"pictBeaterHammerWoodUp",
				"pictBeaterHammerWoodDown",
				"pictBeaterHammerPlasticUp",
				"pictBeaterHammerPlasticDown",
				"pictBeaterHammerMetalUp",
				"pictBeaterHammerMetalDown",
				"pictBeaterSnareSticksUp",
				"pictBeaterSnareSticksDown",
				"pictBeaterJazzSticksUp",
				"pictBeaterJazzSticksDown",
				"pictBeaterTriangleUp",
				"pictBeaterTriangleDown",
				"pictBeaterWireBrushesUp",
				"pictBeaterWireBrushesDown",
				"pictBeaterBrassMalletsUp",
				"pictBeaterBrassMalletsDown",
				"pictBeaterSoftXylophone",
				"pictBeaterSpoonWoodenMallet",
				"pictBeaterGuiroScraper",
				"pictBeaterBow",
				"pictBeaterMallet",
				"pictBeaterMetalHammer",
				"pictBeaterHammer",
				"pictBeaterKnittingNeedle",
				"pictBeaterHand",
				"pictBeaterFinger",
				"pictBeaterFist",
				"pictBeaterFingernails",
				"pictCoins",
				"pictDrumStick",
				"pictBeaterCombiningParentheses",
				"pictBeaterCombiningDashedCircle",
				"pictBeaterBox",
				"pictBeaterMalletDown",
				"pictBeaterBrassMalletsRight",
				"pictBeaterBrassMalletsLeft",
				"pictBeaterTrianglePlain"
				);
				name = "Beaters pictograms";
			},
			{
				list = (
				"pictSleighBell",
				"pictCowBell",
				"pictAlmglocken",
				"pictBellPlate",
				"pictBell",
				"pictHandbell",
				"pictCencerro",
				"pictAgogo",
				"pictShellBells",
				"pictJingleBells",
				"pictBellTree"
				);
				name = "Bells pictograms";
			},
			{
				list = (
				"brassScoop",
				"brassLiftShort",
				"brassLiftMedium",
				"brassLiftLong",
				"brassDoitShort",
				"brassDoitMedium",
				"brassDoitLong",
				"brassFallLipShort",
				"brassFallLipMedium",
				"brassFallLipLong",
				"brassFallSmoothShort",
				"brassFallSmoothMedium",
				"brassFallSmoothLong",
				"brassFallRoughShort",
				"brassFallRoughMedium",
				"brassFallRoughLong",
				"brassPlop",
				"brassFlip",
				"brassSmear",
				"brassBend",
				"brassJazzTurn",
				"brassMuteClosed",
				"brassMuteHalfClosed",
				"brassMuteOpen",
				"brassHarmonMuteClosed",
				"brassHarmonMuteStemHalfLeft",
				"brassHarmonMuteStemHalfRight",
				"brassHarmonMuteStemOpen",
				"brassLiftSmoothShort",
				"brassLiftSmoothMedium",
				"brassLiftSmoothLong",
				"brassValveTrill"
				);
				name = "Brass techniques";
			},
			{
				list = (
				"pictTubularBells",
				"pictWindChimesGlass",
				"pictChimes",
				"pictBambooChimes",
				"pictShellChimes",
				"pictGlassTubeChimes",
				"pictGlassPlateChimes",
				"pictMetalTubeChimes",
				"pictMetalPlateChimes"
				);
				name = "Chimes pictograms";
			},
			{
				list = (
				"fretboard3String",
				"fretboard3StringNut",
				"fretboard4String",
				"fretboard4StringNut",
				"fretboard5String",
				"fretboard5StringNut",
				"fretboard6String",
				"fretboard6StringNut",
				"fretboardFilledCircle",
				"fretboardX",
				"fretboardO"
				);
				name = "Chord diagrams";
			},
			{
				list = (
				"csymDiminished",
				"csymHalfDiminished",
				"csymAugmented",
				"csymMajorSeventh",
				"csymMinor",
				"csymParensLeftTall",
				"csymParensRightTall",
				"csymBracketLeftTall",
				"csymBracketRightTall",
				"csymParensLeftVeryTall",
				"csymParensRightVeryTall",
				"csymAlteredBassSlash",
				"csymDiagonalArrangementSlash"
				);
				name = "Chord symbols";
			},
			{
				list = (
				"gClef",
				"gClef15mb",
				"gClef8vb",
				"gClef8va",
				"gClef15ma",
				"gClef8vbOld",
				"gClef8vbCClef",
				"gClef8vbParens",
				"gClefLigatedNumberBelow",
				"gClefLigatedNumberAbove",
				"gClefArrowUp",
				"gClefArrowDown",
				"cClef",
				"cClef8vb",
				"cClefArrowUp",
				"cClefArrowDown",
				"cClefSquare",
				"cClefCombining",
				"fClef",
				"fClef15mb",
				"fClef8vb",
				"fClef8va",
				"fClef15ma",
				"fClefArrowUp",
				"fClefArrowDown",
				"unpitchedPercussionClef1",
				"unpitchedPercussionClef2",
				"semipitchedPercussionClef1",
				"semipitchedPercussionClef2",
				"6stringTabClef",
				"4stringTabClef",
				"schaefferClef",
				"schaefferPreviousClef",
				"schaefferGClefToFClef",
				"schaefferFClefToGClef",
				"gClefReversed",
				"gClefTurned",
				"cClefReversed",
				"fClefReversed",
				"fClefTurned",
				"bridgeClef",
				"accdnDiatonicClef",
				"gClefChange",
				"cClefChange",
				"fClefChange",
				"clef8",
				"clef15",
				"clefChangeCombining"
				);
				name = "Clefs";
			},
			{
				list = (
				"indianDrumClef" );
				name = "Clefs supplement";
			},
			{
				list = (
				"staffPosRaise1",
				"staffPosRaise2",
				"staffPosRaise3",
				"staffPosRaise4",
				"staffPosRaise5",
				"staffPosRaise6",
				"staffPosRaise7",
				"staffPosRaise8",
				"staffPosLower1",
				"staffPosLower2",
				"staffPosLower3",
				"staffPosLower4",
				"staffPosLower5",
				"staffPosLower6",
				"staffPosLower7",
				"staffPosLower8"
				);
				name = "Combining staff positions";
			},
			{
				list = (
				"ornamentTopLeftConcaveStroke",
				"ornamentTopLeftConvexStroke",
				"ornamentHighLeftConcaveStroke",
				"ornamentHighLeftConvexStroke",
				"ornamentLeftVerticalStroke",
				"ornamentLeftVerticalStrokeWithCross",
				"ornamentLeftShakeT",
				"ornamentLeftPlus",
				"ornamentLowLeftConcaveStroke",
				"ornamentLowLeftConvexStroke",
				"ornamentBottomLeftConcaveStroke",
				"ornamentBottomLeftConcaveStrokeLarge",
				"ornamentBottomLeftConvexStroke",
				"ornamentZigZagLineNoRightEnd",
				"ornamentZigZagLineWithRightEnd",
				"ornamentMiddleVerticalStroke",
				"ornamentTopRightConcaveStroke",
				"ornamentTopRightConvexStroke",
				"ornamentHighRightConcaveStroke",
				"ornamentHighRightConvexStroke",
				"ornamentRightVerticalStroke",
				"ornamentLowRightConcaveStroke",
				"ornamentLowRightConvexStroke",
				"ornamentBottomRightConcaveStroke",
				"ornamentBottomRightConvexStroke"
				);
				name = "Combining strokes for trills and mordents";
			},
			{
				list = (
				"graceNoteAcciaccaturaStemUp",
				"graceNoteAcciaccaturaStemDown",
				"graceNoteAppoggiaturaStemUp",
				"graceNoteAppoggiaturaStemDown",
				"graceNoteSlashStemUp",
				"graceNoteSlashStemDown",
				"ornamentTrill",
				"ornamentTurn",
				"ornamentTurnInverted",
				"ornamentTurnSlash",
				"ornamentTurnUp",
				"ornamentTurnUpS",
				"ornamentShortTrill",
				"ornamentMordent",
				"ornamentTremblement",
				"ornamentHaydn"
				);
				name = "Common ornaments";
			},
			{
				list = (
				"conductorStrongBeat",
				"conductorLeftBeat",
				"conductorRightBeat",
				"conductorWeakBeat",
				"conductorBeat2Simple",
				"conductorBeat3Simple",
				"conductorBeat4Simple",
				"conductorBeat2Compound",
				"conductorBeat3Compound",
				"conductorBeat4Compound",
				"conductorUnconducted"
				);
				name = "Conductor symbols";
			},
			{
				list = (
				"pictCrashCymbals",
				"pictSuspendedCymbal",
				"pictHiHat",
				"pictHiHatOnStand",
				"pictSizzleCymbal",
				"pictVietnameseHat",
				"pictChineseCymbal",
				"pictFingerCymbals",
				"pictCymbalTongs",
				"pictEdgeOfCymbal",
				"pictBellOfCymbal"
				);
				name = "Cymbals pictograms";
			},
			{
				list = (
				"daseianGraves1",
				"daseianGraves2",
				"daseianGraves3",
				"daseianGraves4",
				"daseianFinales1",
				"daseianFinales2",
				"daseianFinales3",
				"daseianFinales4",
				"daseianSuperiores1",
				"daseianSuperiores2",
				"daseianSuperiores3",
				"daseianSuperiores4",
				"daseianExcellentes1",
				"daseianExcellentes2",
				"daseianExcellentes3",
				"daseianExcellentes4",
				"daseianResidua1",
				"daseianResidua2"
				);
				name = "Daseian notation";
			},
			{
				list = (
				"pictTimpani",
				"pictSnareDrum",
				"pictSnareDrumSnaresOff",
				"pictSnareDrumMilitary",
				"pictBassDrum",
				"pictBassDrumOnSide",
				"pictTenorDrum",
				"pictTomTom",
				"pictTomTomChinese",
				"pictTomTomJapanese",
				"pictTomTomIndoAmerican",
				"pictTambourine",
				"pictTimbales",
				"pictBongos",
				"pictConga",
				"pictLogDrum",
				"pictSlitDrum",
				"pictBrakeDrum",
				"pictGobletDrum",
				"pictTabla",
				"pictCuica"
				);
				name = "Drums pictograms";
			},
			{
				list = (
				"dynamicPiano",
				"dynamicMezzo",
				"dynamicForte",
				"dynamicRinforzando",
				"dynamicSforzando",
				"dynamicZ",
				"dynamicNiente",
				"dynamicPPPPPP",
				"dynamicPPPPP",
				"dynamicPPPP",
				"dynamicPPP",
				"dynamicPP",
				"dynamicMP",
				"dynamicMF",
				"dynamicPF",
				"dynamicFF",
				"dynamicFFF",
				"dynamicFFFF",
				"dynamicFFFFF",
				"dynamicFFFFFF",
				"dynamicFortePiano",
				"dynamicForzando",
				"dynamicSforzando1",
				"dynamicSforzandoPiano",
				"dynamicSforzandoPianissimo",
				"dynamicSforzato",
				"dynamicSforzatoPiano",
				"dynamicSforzatoFF",
				"dynamicRinforzando1",
				"dynamicRinforzando2",
				"dynamicCrescendoHairpin",
				"dynamicDiminuendoHairpin",
				"dynamicMessaDiVoce",
				"dynamicNienteForHairpin",
				"dynamicHairpinParenthesisLeft",
				"dynamicHairpinParenthesisRight",
				"dynamicHairpinBracketLeft",
				"dynamicHairpinBracketRight",
				"dynamicCombinedSeparatorColon",
				"dynamicCombinedSeparatorHyphen",
				"dynamicCombinedSeparatorSpace",
				"dynamicCombinedSeparatorSlash"
				);
				name = "Dynamics";
			},
			{
				list = (
				"elecMicrophone",
				"elecHeadphones",
				"elecHeadset",
				"elecDisc",
				"elecTape",
				"elecMixingConsole",
				"elecUSB",
				"elecVideoCamera",
				"elecMonitor",
				"elecProjector",
				"elecLoudspeaker",
				"elecCamera",
				"elecPlay",
				"elecStop",
				"elecPause",
				"elecFastForward",
				"elecRewind",
				"elecSkipForwards",
				"elecSkipBackwards",
				"elecLoop",
				"elecReplay",
				"elecShuffle",
				"elecMute",
				"elecUnmute",
				"elecMicrophoneMute",
				"elecMicrophoneUnmute",
				"elecPowerOnOff",
				"elecEject",
				"elecVolumeFader",
				"elecVolumeFaderThumb",
				"elecVolumeLevel0",
				"elecVolumeLevel20",
				"elecVolumeLevel40",
				"elecVolumeLevel60",
				"elecVolumeLevel80",
				"elecVolumeLevel100",
				"elecMIDIIn",
				"elecMIDIOut",
				"elecMIDIController0",
				"elecMIDIController20",
				"elecMIDIController40",
				"elecMIDIController60",
				"elecMIDIController80",
				"elecMIDIController100",
				"elecAudioMono",
				"elecAudioStereo",
				"elecAudioChannelsOne",
				"elecAudioChannelsTwo",
				"elecAudioChannelsThreeFrontal",
				"elecAudioChannelsThreeSurround",
				"elecAudioChannelsFour",
				"elecAudioChannelsFive",
				"elecAudioChannelsSix",
				"elecAudioChannelsSeven",
				"elecAudioChannelsEight",
				"elecLineIn",
				"elecLineOut",
				"elecAudioIn",
				"elecAudioOut",
				"elecVideoIn",
				"elecVideoOut",
				"elecDataIn",
				"elecDataOut",
				"elecDownload",
				"elecUpload"
				);
				name = "Electronic music pictograms";
			},
			{
				list = (
				"accidentalDoubleFlatOneArrowDown",
				"accidentalFlatOneArrowDown",
				"accidentalNaturalOneArrowDown",
				"accidentalSharpOneArrowDown",
				"accidentalDoubleSharpOneArrowDown",
				"accidentalDoubleFlatOneArrowUp",
				"accidentalFlatOneArrowUp",
				"accidentalNaturalOneArrowUp",
				"accidentalSharpOneArrowUp",
				"accidentalDoubleSharpOneArrowUp",
				"accidentalDoubleFlatTwoArrowsDown",
				"accidentalFlatTwoArrowsDown",
				"accidentalNaturalTwoArrowsDown",
				"accidentalSharpTwoArrowsDown",
				"accidentalDoubleSharpTwoArrowsDown",
				"accidentalDoubleFlatTwoArrowsUp",
				"accidentalFlatTwoArrowsUp",
				"accidentalNaturalTwoArrowsUp",
				"accidentalSharpTwoArrowsUp",
				"accidentalDoubleSharpTwoArrowsUp",
				"accidentalDoubleFlatThreeArrowsDown",
				"accidentalFlatThreeArrowsDown",
				"accidentalNaturalThreeArrowsDown",
				"accidentalSharpThreeArrowsDown",
				"accidentalDoubleSharpThreeArrowsDown",
				"accidentalDoubleFlatThreeArrowsUp",
				"accidentalFlatThreeArrowsUp",
				"accidentalNaturalThreeArrowsUp",
				"accidentalSharpThreeArrowsUp",
				"accidentalDoubleSharpThreeArrowsUp",
				"accidentalLowerOneSeptimalComma",
				"accidentalRaiseOneSeptimalComma",
				"accidentalLowerTwoSeptimalCommas",
				"accidentalRaiseTwoSeptimalCommas",
				"accidentalLowerOneUndecimalQuartertone",
				"accidentalRaiseOneUndecimalQuartertone",
				"accidentalLowerOneTridecimalQuartertone",
				"accidentalRaiseOneTridecimalQuartertone",
				"accidentalCombiningLower17Schisma",
				"accidentalCombiningRaise17Schisma",
				"accidentalCombiningLower19Schisma",
				"accidentalCombiningRaise19Schisma",
				"accidentalCombiningLower23Limit29LimitComma",
				"accidentalCombiningRaise23Limit29LimitComma",
				"accidentalCombiningLower31Schisma",
				"accidentalCombiningRaise31Schisma",
				"accidentalCombiningOpenCurlyBrace",
				"accidentalCombiningCloseCurlyBrace",
				"accidentalDoubleFlatEqualTempered",
				"accidentalFlatEqualTempered",
				"accidentalNaturalEqualTempered",
				"accidentalSharpEqualTempered",
				"accidentalDoubleSharpEqualTempered",
				"accidentalQuarterFlatEqualTempered",
				"accidentalQuarterSharpEqualTempered",
				"accidentalCombiningLower53LimitComma",
				"accidentalCombiningRaise53LimitComma",
				"accidentalEnharmonicTilde",
				"accidentalEnharmonicAlmostEqualTo",
				"accidentalEnharmonicEquals"
				);
				name = "Extended Helmholtz-Ellis accidentals (just intonation)";
			},
			{
				list = (
				"accidentalReversedFlatArrowUp",
				"accidentalReversedFlatArrowDown",
				"accidentalFilledReversedFlatArrowUp",
				"accidentalFilledReversedFlatArrowDown",
				"accidentalReversedFlatAndFlatArrowUp",
				"accidentalReversedFlatAndFlatArrowDown",
				"accidentalFilledReversedFlatAndFlat",
				"accidentalFilledReversedFlatAndFlatArrowUp",
				"accidentalFilledReversedFlatAndFlatArrowDown",
				"accidentalHalfSharpArrowUp",
				"accidentalHalfSharpArrowDown",
				"accidentalOneAndAHalfSharpsArrowUp",
				"accidentalOneAndAHalfSharpsArrowDown"
				);
				name = "Extended Stein-Zimmermann accidentals";
			},
			{
				list = (
				"figbass0",
				"figbass1",
				"figbass2",
				"figbass2Raised",
				"figbass3",
				"figbass4",
				"figbass4Raised",
				"figbass5",
				"figbass5Raised1",
				"figbass5Raised2",
				"figbass5Raised3",
				"figbass6",
				"figbass6Raised",
				"figbass7",
				"figbass7Raised1",
				"figbass7Raised2",
				"figbass8",
				"figbass9",
				"figbass9Raised",
				"figbassDoubleFlat",
				"figbassFlat",
				"figbassNatural",
				"figbassSharp",
				"figbassDoubleSharp",
				"figbassBracketLeft",
				"figbassBracketRight",
				"figbassParensLeft",
				"figbassParensRight",
				"figbassPlus",
				"figbassCombiningRaising",
				"figbassCombiningLowering",
				"figbass6Raised2"
				);
				name = "Figured bass";
			},
			{
				list = (
				"figbass7Diminished" );
				name = "Figured bass supplement";
			},
			{
				list = (
				"fingering0",
				"fingering1",
				"fingering2",
				"fingering3",
				"fingering4",
				"fingering5",
				"fingeringTUpper",
				"fingeringPLower",
				"fingeringTLower",
				"fingeringILower",
				"fingeringMLower",
				"fingeringALower",
				"fingeringCLower",
				"fingeringXLower",
				"fingeringELower",
				"fingeringOLower",
				"fingeringSubstitutionAbove",
				"fingeringSubstitutionBelow",
				"fingeringSubstitutionDash",
				"fingeringMultipleNotes",
				"fingering6",
				"fingering7",
				"fingering8",
				"fingering9",
				"fingeringLeftParenthesis",
				"fingeringRightParenthesis",
				"fingeringLeftBracket",
				"fingeringRightBracket",
				"fingeringSeparatorMiddleDot",
				"fingeringSeparatorMiddleDotWhite",
				"fingeringSeparatorSlash"
				);
				name = "Fingering";
			},
			{
				list = (
				"fingering0Italic",
				"fingering1Italic",
				"fingering2Italic",
				"fingering3Italic",
				"fingering4Italic",
				"fingering5Italic",
				"fingering6Italic",
				"fingering7Italic",
				"fingering8Italic",
				"fingering9Italic",
				"fingeringLeftParenthesisItalic",
				"fingeringRightParenthesisItalic",
				"fingeringLeftBracketItalic",
				"fingeringRightBracketItalic"
				);
				name = "Fingering supplement";
			},
			{
				list = (
				"flag8thUp",
				"flag8thDown",
				"flag16thUp",
				"flag16thDown",
				"flag32ndUp",
				"flag32ndDown",
				"flag64thUp",
				"flag64thDown",
				"flag128thUp",
				"flag128thDown",
				"flag256thUp",
				"flag256thDown",
				"flag512thUp",
				"flag512thDown",
				"flag1024thUp",
				"flag1024thDown",
				"flagInternalUp",
				"flagInternalDown"
				);
				name = "Flags";
			},
			{
				list = (
				"luteFrenchFretA",
				"luteFrenchFretB",
				"luteFrenchFretC",
				"luteFrenchFretD",
				"luteFrenchFretE",
				"luteFrenchFretF",
				"luteFrenchFretG",
				"luteFrenchFretH",
				"luteFrenchFretI",
				"luteFrenchFretK",
				"luteFrenchFretL",
				"luteFrenchFretM",
				"luteFrenchFretN",
				"luteFrench7thCourse",
				"luteFrench8thCourse",
				"luteFrench9thCourse",
				"luteFrench10thCourse",
				"luteFrenchMordentUpper",
				"luteFrenchMordentLower",
				"luteFrenchMordentInverted",
				"luteFrenchAppoggiaturaBelow",
				"luteFrenchAppoggiaturaAbove"
				);
				name = "French and English Renaissance lute tablature";
			},
			{
				list = (
				"functionZero",
				"functionOne",
				"functionTwo",
				"functionThree",
				"functionFour",
				"functionFive",
				"functionSix",
				"functionSeven",
				"functionEight",
				"functionNine",
				"functionLessThan",
				"functionMinus",
				"functionGreaterThan",
				"functionSSUpper",
				"functionSSLower",
				"functionDUpper",
				"functionDLower",
				"functionDD",
				"functionSlashedDD",
				"functionGUpper",
				"functionGLower",
				"functionNUpper",
				"functionNLower",
				"functionPUpper",
				"functionPLower",
				"functionSUpper",
				"functionSLower",
				"functionTUpper",
				"functionTLower",
				"functionVUpper",
				"functionVLower",
				"functionBracketLeft",
				"functionBracketRight",
				"functionParensLeft",
				"functionParensRight",
				"functionAngleLeft",
				"functionAngleRight",
				"functionRepetition1",
				"functionRepetition2",
				"functionRing",
				"functionPlus",
				"functionFUpper",
				"functionIUpper",
				"functionILower",
				"functionKUpper",
				"functionKLower",
				"functionLUpper",
				"functionLLower"
				);
				name = "Function theory symbols";
			},
			{
				list = (
				"functionMUpper",
				"functionMLower",
				"functionNUpperSuperscript",
				"functionRLower" );
				name = "Function theory symbols supplement";
			},
			{
				list = (
				"luteGermanALower",
				"luteGermanBLower",
				"luteGermanCLower",
				"luteGermanDLower",
				"luteGermanELower",
				"luteGermanFLower",
				"luteGermanGLower",
				"luteGermanHLower",
				"luteGermanILower",
				"luteGermanKLower",
				"luteGermanLLower",
				"luteGermanMLower",
				"luteGermanNLower",
				"luteGermanOLower",
				"luteGermanPLower",
				"luteGermanQLower",
				"luteGermanRLower",
				"luteGermanSLower",
				"luteGermanTLower",
				"luteGermanVLower",
				"luteGermanXLower",
				"luteGermanYLower",
				"luteGermanZLower",
				"luteGermanAUpper",
				"luteGermanBUpper",
				"luteGermanCUpper",
				"luteGermanDUpper",
				"luteGermanEUpper",
				"luteGermanFUpper",
				"luteGermanGUpper",
				"luteGermanHUpper",
				"luteGermanIUpper",
				"luteGermanKUpper",
				"luteGermanLUpper",
				"luteGermanMUpper",
				"luteGermanNUpper"
				);
				name = "German Renaissance lute tablature";
			},
			{
				list = (
				"pictTamTam",
				"pictTamTamWithBeater",
				"pictGong",
				"pictGongWithButton",
				"pictSlideBrushOnGong" );
				name = "Gongs pictograms";
			},
			{
				list = (
				"accidentalQuarterToneFlatArrowUp",
				"accidentalThreeQuarterTonesFlatArrowDown",
				"accidentalQuarterToneSharpNaturalArrowUp",
				"accidentalQuarterToneFlatNaturalArrowDown",
				"accidentalThreeQuarterTonesSharpArrowUp",
				"accidentalQuarterToneSharpArrowDown",
				"accidentalFiveQuarterTonesSharpArrowUp",
				"accidentalThreeQuarterTonesSharpArrowDown",
				"accidentalThreeQuarterTonesFlatArrowUp",
				"accidentalFiveQuarterTonesFlatArrowDown",
				"accidentalArrowUp",
				"accidentalArrowDown"
				);
				name = "Gould arrow quartertone accidentals (24-EDO)";
			},
			{
				list = (
				"guitarVibratoBarScoop",
				"guitarVibratoBarDip",
				"guitarShake",
				"guitarString0",
				"guitarString1",
				"guitarString2",
				"guitarString3",
				"guitarString4",
				"guitarString5",
				"guitarString6",
				"guitarString7",
				"guitarString8",
				"guitarString9",
				"guitarOpenPedal",
				"guitarHalfOpenPedal",
				"guitarClosePedal",
				"guitarLeftHandTapping",
				"guitarRightHandTapping",
				"guitarGolpe",
				"guitarFadeIn",
				"guitarFadeOut",
				"guitarVolumeSwell",
				"guitarStrumUp",
				"guitarStrumDown",
				"guitarBarreFull",
				"guitarBarreHalf"
				);
				name = "Guitar";
			},
			{
				list = (
				"handbellsMartellato",
				"handbellsMartellatoLift",
				"handbellsHandMartellato",
				"handbellsMutedMartellato",
				"handbellsMalletBellSuspended",
				"handbellsMalletBellOnTable",
				"handbellsMalletLft",
				"handbellsPluckLift",
				"handbellsSwingUp",
				"handbellsSwingDown",
				"handbellsSwing",
				"handbellsEcho1",
				"handbellsEcho2",
				"handbellsGyro",
				"handbellsDamp3",
				"handbellsBelltree",
				"handbellsTableSingleBell",
				"handbellsTablePairBells"
				);
				name = "Handbells";
			},
			{
				list = (
				"harpPedalRaised",
				"harpPedalCentered",
				"harpPedalLowered",
				"harpPedalDivider",
				"harpSalzedoSlideWithSuppleness",
				"harpSalzedoOboicFlux",
				"harpSalzedoThunderEffect",
				"harpSalzedoWhistlingSounds",
				"harpSalzedoMetallicSounds",
				"harpSalzedoTamTamSounds",
				"harpSalzedoPlayUpperEnd",
				"harpSalzedoTimpanicSounds",
				"harpSalzedoMuffleTotally",
				"harpSalzedoFluidicSoundsLeft",
				"harpSalzedoFluidicSoundsRight",
				"harpMetalRod",
				"harpTuningKey",
				"harpTuningKeyHandle",
				"harpTuningKeyShank",
				"harpTuningKeyGlissando",
				"harpStringNoiseStem",
				"harpSalzedoAeolianAscending",
				"harpSalzedoAeolianDescending",
				"harpSalzedoDampLowStrings",
				"harpSalzedoDampBothHands",
				"harpSalzedoDampBelow",
				"harpSalzedoDampAbove",
				"harpSalzedoMetallicSoundsOneString",
				"harpSalzedoIsolatedSounds",
				"harpSalzedoSnareDrum"
				);
				name = "Harp techniques";
			},
			{
				list = (
				"accSagittalShaftUp",
				"accSagittalShaftDown",
				"accSagittalAcute",
				"accSagittalGrave" );
				name = "Herculean Sagittal extension (very high precision) accidental diacritics";
			},
			{
				list = (
				"fermataAbove",
				"fermataBelow",
				"fermataVeryShortAbove",
				"fermataVeryShortBelow",
				"fermataShortAbove",
				"fermataShortBelow",
				"fermataLongAbove",
				"fermataLongBelow",
				"fermataVeryLongAbove",
				"fermataVeryLongBelow",
				"fermataLongHenzeAbove",
				"fermataLongHenzeBelow",
				"fermataShortHenzeAbove",
				"fermataShortHenzeBelow",
				"breathMarkComma",
				"breathMarkTick",
				"breathMarkUpbow",
				"caesura",
				"caesuraThick",
				"caesuraShort",
				"caesuraCurved",
				"breathMarkSalzedo",
				"curlewSign"
				);
				name = "Holds and pauses";
			},
			{
				list = (
				"noteDoubleWhole",
				"noteDoubleWholeSquare",
				"noteWhole",
				"noteHalfUp",
				"noteHalfDown",
				"noteQuarterUp",
				"noteQuarterDown",
				"note8thUp",
				"note8thDown",
				"note16thUp",
				"note16thDown",
				"note32ndUp",
				"note32ndDown",
				"note64thUp",
				"note64thDown",
				"note128thUp",
				"note128thDown",
				"note256thUp",
				"note256thDown",
				"note512thUp",
				"note512thDown",
				"note1024thUp",
				"note1024thDown",
				"augmentationDot"
				);
				name = "Individual notes";
			},
			{
				list = (
				"luteItalianFret0",
				"luteItalianFret1",
				"luteItalianFret2",
				"luteItalianFret3",
				"luteItalianFret4",
				"luteItalianFret5",
				"luteItalianFret6",
				"luteItalianFret7",
				"luteItalianFret8",
				"luteItalianFret9",
				"luteItalianTempoFast",
				"luteItalianTempoSomewhatFast",
				"luteItalianTempoNeitherFastNorSlow",
				"luteItalianTempoSlow",
				"luteItalianTempoVerySlow",
				"luteItalianTimeTriple",
				"luteItalianClefFFaUt",
				"luteItalianClefCSolFaUt",
				"luteItalianTremolo",
				"luteItalianHoldNote",
				"luteItalianHoldFinger",
				"luteItalianReleaseFinger",
				"luteItalianVibrato"
				);
				name = "Italian and Spanish Renaissance lute tablature";
			},
			{
				list = (
				"accidentalJohnstonPlus",
				"accidentalJohnstonMinus",
				"accidentalJohnstonEl",
				"accidentalJohnstonSeven",
				"accidentalJohnstonUp",
				"accidentalJohnstonDown",
				"accidentalJohnston13",
				"accidentalJohnston31"
				);
				name = "Johnston accidentals (just intonation)";
			},
			{
				list = (
				"kahnStep",
				"kahnTap",
				"kahnHop",
				"kahnLeap",
				"kahnJumpTogether",
				"kahnJumpApart",
				"kahnBrushForward",
				"kahnBrushBackward",
				"kahnGraceTap",
				"kahnFlat",
				"kahnHeel",
				"kahnToe",
				"kahnKneeOutward",
				"kahnKneeInward",
				"kahnScrape",
				"kahnTrench",
				"kahnFleaHop",
				"kahnFleaTap",
				"kahnDrawStep",
				"kahnDrawTap",
				"kahnSlideStep",
				"kahnSlideTap",
				"kahnHeelDrop",
				"kahnToeDrop",
				"kahnClap",
				"kahnSnap",
				"kahnDoubleSnap",
				"kahnHeelClick",
				"kahnToeClick",
				"kahnLeftCross",
				"kahnRightCross",
				"kahnLeftCatch",
				"kahnRightCatch",
				"kahnLeftToeStrike",
				"kahnRightToeStrike",
				"kahnStamp",
				"kahnHeelStep",
				"kahnToeStep",
				"kahnBallChange",
				"kahnStepStamp",
				"kahnStampStamp",
				"kahnHeelChange",
				"kahnStomp",
				"kahnHeelTap",
				"kahnToeTap",
				"kahnBallDig",
				"kahnSlam",
				"kahnFlam",
				"kahnGraceTapHop",
				"kahnGraceTapChange",
				"kahnLeapFlatFoot",
				"kahnGraceTapStamp",
				"kahnLeapHeelClick",
				"kahnFlap",
				"kahnRip",
				"kahnFlapStep",
				"kahnBackFlap",
				"kahnSlap",
				"kahnBackRip",
				"kahnStompBrush",
				"kahnScuff",
				"kahnChug",
				"kahnPush",
				"kahnZink",
				"kahnRiff",
				"kahnBackRiff",
				"kahnBackChug",
				"kahnPull",
				"kahnZank",
				"kahnShuffle",
				"kahnScuffle",
				"kahnRiffle",
				"kahnRipple",
				"kahnWing",
				"kahnWingChange",
				"kahnDoubleWing",
				"kahnOverTheTop",
				"kahnOverTheTopTap",
				"kahnLeftFoot",
				"kahnRightFoot",
				"kahnLeftTurn",
				"kahnRightTurn"
				);
				name = "Kahnotation";
			},
			{
				list = (
				"keyboardPedalPed",
				"keyboardPedalP",
				"keyboardPedalE",
				"keyboardPedalD",
				"keyboardPedalDot",
				"keyboardPedalUp",
				"keyboardPedalHalf",
				"keyboardPedalUpNotch",
				"keyboardPedalHyphen",
				"keyboardPedalSost",
				"keyboardPedalS",
				"keyboardPedalHalf2",
				"keyboardPedalHalf3",
				"keyboardPedalUpSpecial",
				"keyboardLeftPedalPictogram",
				"keyboardMiddlePedalPictogram",
				"keyboardRightPedalPictogram",
				"keyboardPedalHeel1",
				"keyboardPedalHeel2",
				"keyboardPedalHeel3",
				"keyboardPedalToe1",
				"keyboardPedalToe2",
				"keyboardPedalHeelToe",
				"keyboardPluckInside",
				"keyboardBebung2DotsAbove",
				"keyboardBebung2DotsBelow",
				"keyboardBebung3DotsAbove",
				"keyboardBebung3DotsBelow",
				"keyboardBebung4DotsAbove",
				"keyboardBebung4DotsBelow",
				"keyboardPlayWithRH",
				"keyboardPlayWithRHEnd",
				"keyboardPlayWithLH",
				"keyboardPlayWithLHEnd",
				"keyboardPedalHookStart",
				"keyboardPedalHookEnd",
				"keyboardPedalHeelToToe",
				"keyboardPedalToeToHeel",
				"keyboardPedalParensLeft",
				"keyboardPedalParensRight"
				);
				name = "Keyboard techniques";
			},
			{
				list = (
				"kievanCClef",
				"kievanEndingSymbol",
				"kievanNoteReciting",
				"kievanNoteWhole",
				"kievanNoteWholeFinal",
				"kievanNoteHalfStaffLine",
				"kievanNoteHalfStaffSpace",
				"kievanNoteQuarterStemUp",
				"kievanNoteQuarterStemDown",
				"kievanNote8thStemUp",
				"kievanNote8thStemDown",
				"kievanNoteBeam",
				"kievanAugmentationDot",
				"kievanAccidentalSharp",
				"kievanAccidentalFlat"
				);
				name = "Kievan square notation";
			},
			{
				list = (
				"kodalyHandDo",
				"kodalyHandRe",
				"kodalyHandMi",
				"kodalyHandFa",
				"kodalyHandSo",
				"kodalyHandLa",
				"kodalyHandTi"
				);
				name = "Kodály hand signs";
			},
			{
				list = (
				"lyricsElisionNarrow",
				"lyricsElision",
				"lyricsElisionWide",
				"lyricsHyphenBaseline",
				"lyricsHyphenBaselineNonBreaking",
				"lyricsTextRepeat"
				);
				name = "Lyrics";
			},
			{
				list = ( );
				name = "Magrathean Sagittal extension (insane precision) accidental diacritics";
			},
			{
				list = (
				"medRenFlatSoftB",
				"medRenFlatHardB",
				"medRenNatural",
				"medRenSharpCroix",
				"medRenFlatWithDot",
				"medRenNaturalWithCross"
				);
				name = "Medieval and Renaissance accidentals";
			},
			{
				list = (
				"mensuralGclef",
				"mensuralGclefPetrucci",
				"chantFclef",
				"mensuralFclef",
				"mensuralFclefPetrucci",
				"mensuralCclef",
				"chantCclef",
				"mensuralCclefPetrucciPosLowest",
				"mensuralCclefPetrucciPosLow",
				"mensuralCclefPetrucciPosMiddle",
				"mensuralCclefPetrucciPosHigh",
				"mensuralCclefPetrucciPosHighest"
				);
				name = "Medieval and Renaissance clefs";
			},
			{
				list = (
				"mensuralBlackMaxima",
				"mensuralBlackLonga",
				"mensuralBlackBrevis",
				"mensuralBlackSemibrevis",
				"mensuralBlackMinima",
				"mensuralBlackSemiminima",
				"mensuralBlackBrevisVoid",
				"mensuralBlackSemibrevisVoid",
				"mensuralBlackMinimaVoid",
				"mensuralBlackSemibrevisCaudata",
				"mensuralBlackDragma",
				"mensuralBlackSemibrevisOblique",
				"mensuralWhiteMaxima",
				"mensuralWhiteLonga",
				"mensuralWhiteBrevis",
				"mensuralWhiteMinima",
				"mensuralWhiteSemiminima",
				"mensuralWhiteFusa"
				);
				name = "Medieval and Renaissance individual notes";
			},
			{
				list = (
				"mensuralSignumUp",
				"mensuralSignumDown",
				"mensuralCustosUp",
				"mensuralCustosDown",
				"chantCustosStemUpPosLowest",
				"chantCustosStemUpPosLow",
				"chantCustosStemUpPosMiddle",
				"chantCustosStemDownPosMiddle",
				"chantCustosStemDownPosHigh",
				"chantCustosStemDownPosHighest",
				"mensuralCustosCheckmark",
				"mensuralCustosTurn",
				"mensuralColorationStartSquare",
				"mensuralColorationEndSquare",
				"mensuralColorationStartRound",
				"mensuralColorationEndRound",
				"mensuralAlterationSign"
				);
				name = "Medieval and Renaissance miscellany";
			},
			{
				list = (
				"mensuralNoteheadMaximaBlack",
				"mensuralNoteheadMaximaVoid",
				"mensuralNoteheadMaximaBlackVoid",
				"mensuralNoteheadMaximaWhite",
				"mensuralNoteheadLongaBlack",
				"mensuralNoteheadLongaVoid",
				"mensuralNoteheadLongaBlackVoid",
				"mensuralNoteheadLongaWhite",
				"mensuralNoteheadSemibrevisBlack",
				"mensuralNoteheadSemibrevisVoid",
				"mensuralNoteheadSemibrevisBlackVoid",
				"mensuralNoteheadSemibrevisBlackVoidTurned",
				"mensuralNoteheadMinimaWhite",
				"mensuralNoteheadSemiminimaWhite",
				"mensuralCombStemUp",
				"mensuralCombStemDown",
				"mensuralCombStemDiagonal",
				"mensuralCombStemUpFlagRight",
				"mensuralCombStemDownFlagRight",
				"mensuralCombStemUpFlagLeft",
				"mensuralCombStemDownFlagLeft",
				"mensuralCombStemUpFlagFlared",
				"mensuralCombStemDownFlagFlared",
				"mensuralCombStemUpFlagExtended",
				"mensuralCombStemDownFlagExtended",
				"mensuralCombStemUpFlagSemiminima",
				"mensuralCombStemDownFlagSemiminima",
				"mensuralCombStemUpFlagFusa",
				"mensuralCombStemDownFlagFusa"
				);
				name = "Medieval and Renaissance noteheads and stems";
			},
			{
				list = (
				"mensuralObliqueAsc2ndBlack",
				"mensuralObliqueAsc2ndVoid",
				"mensuralObliqueAsc2ndBlackVoid",
				"mensuralObliqueAsc2ndWhite",
				"mensuralObliqueAsc3rdBlack",
				"mensuralObliqueAsc3rdVoid",
				"mensuralObliqueAsc3rdBlackVoid",
				"mensuralObliqueAsc3rdWhite",
				"mensuralObliqueAsc4thBlack",
				"mensuralObliqueAsc4thVoid",
				"mensuralObliqueAsc4thBlackVoid",
				"mensuralObliqueAsc4thWhite",
				"mensuralObliqueAsc5thBlack",
				"mensuralObliqueAsc5thVoid",
				"mensuralObliqueAsc5thBlackVoid",
				"mensuralObliqueAsc5thWhite",
				"mensuralObliqueDesc2ndBlack",
				"mensuralObliqueDesc2ndVoid",
				"mensuralObliqueDesc2ndBlackVoid",
				"mensuralObliqueDesc2ndWhite",
				"mensuralObliqueDesc3rdBlack",
				"mensuralObliqueDesc3rdVoid",
				"mensuralObliqueDesc3rdBlackVoid",
				"mensuralObliqueDesc3rdWhite",
				"mensuralObliqueDesc4thBlack",
				"mensuralObliqueDesc4thVoid",
				"mensuralObliqueDesc4thBlackVoid",
				"mensuralObliqueDesc4thWhite",
				"mensuralObliqueDesc5thBlack",
				"mensuralObliqueDesc5thVoid",
				"mensuralObliqueDesc5thBlackVoid",
				"mensuralObliqueDesc5thWhite"
				);
				name = "Medieval and Renaissance oblique forms";
			},
			{
				list = (
				"chantIctusAbove",
				"chantIctusBelow",
				"chantCirculusAbove",
				"chantCirculusBelow",
				"chantSemicirculusAbove",
				"chantSemicirculusBelow",
				"chantAccentusAbove",
				"chantAccentusBelow",
				"chantEpisema",
				"chantAugmentum"
				);
				name = "Medieval and Renaissance plainchant articulations";
			},
			{
				list = (
				"chantPodatusLower",
				"chantPodatusUpper",
				"chantDeminutumUpper",
				"chantDeminutumLower",
				"chantEntryLineAsc2nd",
				"chantEntryLineAsc3rd",
				"chantEntryLineAsc4th",
				"chantEntryLineAsc5th",
				"chantEntryLineAsc6th",
				"chantLigaturaDesc2nd",
				"chantLigaturaDesc3rd",
				"chantLigaturaDesc4th",
				"chantLigaturaDesc5th",
				"chantConnectingLineAsc2nd",
				"chantConnectingLineAsc3rd",
				"chantConnectingLineAsc4th",
				"chantConnectingLineAsc5th",
				"chantConnectingLineAsc6th",
				"chantStrophicusLiquescens2nd",
				"chantStrophicusLiquescens3rd",
				"chantStrophicusLiquescens4th",
				"chantStrophicusLiquescens5th"
				);
				name = "Medieval and Renaissance plainchant multiple-note forms";
			},
			{
				list = (
				"chantPunctum",
				"chantPunctumInclinatum",
				"chantPunctumInclinatumAuctum",
				"chantPunctumInclinatumDeminutum",
				"chantAuctumAsc",
				"chantAuctumDesc",
				"chantPunctumVirga",
				"chantPunctumVirgaReversed",
				"chantPunctumCavum",
				"chantPunctumLinea",
				"chantPunctumLineaCavum",
				"chantQuilisma",
				"chantOriscusAscending",
				"chantOriscusDescending",
				"chantOriscusLiquescens",
				"chantStrophicus",
				"chantStrophicusAuctus",
				"chantPunctumDeminutum"
				);
				name = "Medieval and Renaissance plainchant single-note forms";
			},
			{
				list = (
				"mensuralProlation1",
				"mensuralProlation2",
				"mensuralProlation3",
				"mensuralProlation4",
				"mensuralProlation5",
				"mensuralProlation6",
				"mensuralProlation7",
				"mensuralProlation8",
				"mensuralProlation9",
				"mensuralProlation10",
				"mensuralProlation11",
				"mensuralProportionTempusPerfectum",
				"mensuralProportionProportioDupla1",
				"mensuralProportionProportioDupla2",
				"mensuralProportionProportioTripla",
				"mensuralProportionProportioQuadrupla",
				"mensuralProlationCombiningDot",
				"mensuralProlationCombiningTwoDots",
				"mensuralProlationCombiningThreeDots",
				"mensuralProlationCombiningThreeDotsTri",
				"mensuralProlationCombiningDotVoid",
				"mensuralProlationCombiningStroke",
				"mensuralProportion1",
				"mensuralProportion2",
				"mensuralProportion3",
				"mensuralProportion4",
				"mensuralProportionMinor",
				"mensuralProportionMajor",
				"mensuralModusPerfectumVert",
				"mensuralModusImperfectumVert",
				"mensuralTempusPerfectumHoriz",
				"mensuralTempusImperfectumHoriz"
				);
				name = "Medieval and Renaissance prolations";
			},
			{
				list = (
				"mensuralRestMaxima",
				"mensuralRestLongaPerfecta",
				"mensuralRestLongaImperfecta",
				"mensuralRestBrevis",
				"mensuralRestSemibrevis",
				"mensuralRestMinima",
				"mensuralRestSemiminima",
				"mensuralRestFusa",
				"mensuralRestSemifusa"
				);
				name = "Medieval and Renaissance rests";
			},
			{
				list = (
				"chantStaff",
				"chantStaffWide",
				"chantStaffNarrow",
				"chantDivisioMinima",
				"chantDivisioMaior",
				"chantDivisioMaxima",
				"chantDivisioFinalis",
				"chantVirgula",
				"chantCaesura"
				);
				name = "Medieval and Renaissance staves";
			},
			{
				list = (
				"ornamentQuilisma",
				"ornamentOriscus",
				"medRenLiquescenceCMN",
				"medRenPlicaCMN",
				"medRenGClefCMN",
				"medRenPunctumCMN",
				"medRenLiquescentAscCMN",
				"medRenLiquescentDescCMN",
				"medRenQuilismaCMN",
				"medRenStrophicusCMN",
				"medRenOriscusCMN"
				);
				name = "Medieval and Renaissance symbols in CMN";
			},
			{
				list = (
				"pictTriangle",
				"pictAnvil" );
				name = "Metallic struck percussion pictograms";
			},
			{
				list = (
				"metNoteDoubleWhole",
				"metNoteDoubleWholeSquare",
				"metNoteWhole",
				"metNoteHalfUp",
				"metNoteHalfDown",
				"metNoteQuarterUp",
				"metNoteQuarterDown",
				"metNote8thUp",
				"metNote8thDown",
				"metNote16thUp",
				"metNote16thDown",
				"metNote32ndUp",
				"metNote32ndDown",
				"metNote64thUp",
				"metNote64thDown",
				"metNote128thUp",
				"metNote128thDown",
				"metNote256thUp",
				"metNote256thDown",
				"metNote512thUp",
				"metNote512thDown",
				"metNote1024thUp",
				"metNote1024thDown",
				"metAugmentationDot"
				);
				name = "Metronome marks";
			},
			{
				list = (
				"pictPistolShot",
				"pictCannon",
				"pictSandpaperBlocks",
				"pictLionsRoar",
				"pictGlassHarp",
				"pictGlassHarmonica",
				"pictMusicalSaw",
				"pictJawHarp"
				);
				name = "Miscellaneous percussion instrument pictograms";
			},
			{
				list = (
				"miscDoNotPhotocopy",
				"miscDoNotCopy",
				"miscEyeglasses",
				"metricModulationArrowLeft",
				"metricModulationArrowRight"
				);
				name = "Miscellaneous symbols";
			},
			{
				list = (
				"wiggleTrillFastest",
				"wiggleTrillFasterStill",
				"wiggleTrillFaster",
				"wiggleTrillFast",
				"wiggleTrill",
				"wiggleTrillSlow",
				"wiggleTrillSlower",
				"wiggleTrillSlowerStill",
				"wiggleTrillSlowest",
				"wiggleArpeggiatoUp",
				"wiggleArpeggiatoDown",
				"wiggleArpeggiatoUpSwash",
				"wiggleArpeggiatoDownSwash",
				"wiggleArpeggiatoUpArrow",
				"wiggleArpeggiatoDownArrow",
				"wiggleGlissando",
				"wiggleVibrato",
				"wiggleVibratoWide",
				"guitarVibratoStroke",
				"guitarWideVibratoStroke",
				"wiggleWavyNarrow",
				"wiggleWavy",
				"wiggleWavyWide",
				"wiggleSquareWaveNarrow",
				"wiggleSquareWave",
				"wiggleSquareWaveWide",
				"wiggleSawtoothNarrow",
				"wiggleSawtooth",
				"wiggleSawtoothWide",
				"wiggleGlissandoGroup1",
				"wiggleGlissandoGroup2",
				"wiggleGlissandoGroup3",
				"wiggleCircularConstant",
				"wiggleCircularConstantFlipped",
				"wiggleCircularConstantLarge",
				"wiggleCircularConstantFlippedLarge",
				"wiggleCircularStart",
				"wiggleCircularLargest",
				"wiggleCircularLargerStill",
				"wiggleCircularLarger",
				"wiggleCircularLarge",
				"wiggleCircular",
				"wiggleCircularSmall",
				"wiggleCircularEnd",
				"wiggleVibratoStart",
				"wiggleVibratoSmallestFastest",
				"wiggleVibratoSmallestFasterStill",
				"wiggleVibratoSmallestFaster",
				"wiggleVibratoSmallestFast",
				"wiggleVibratoSmallestSlow",
				"wiggleVibratoSmallestSlower",
				"wiggleVibratoSmallestSlowest",
				"wiggleVibratoSmallFastest",
				"wiggleVibratoSmallFasterStill",
				"wiggleVibratoSmallFaster",
				"wiggleVibratoSmallFast",
				"wiggleVibratoSmallSlow",
				"wiggleVibratoSmallSlower",
				"wiggleVibratoSmallSlowest",
				"wiggleVibratoMediumFastest",
				"wiggleVibratoMediumFasterStill",
				"wiggleVibratoMediumFaster",
				"wiggleVibratoMediumFast",
				"wiggleVibratoMediumSlow",
				"wiggleVIbratoMediumSlower",
				"wiggleVibratoMediumSlowest",
				"wiggleVibratoLargeFastest",
				"wiggleVibratoLargeFasterStill",
				"wiggleVibratoLargeFaster",
				"wiggleVibratoLargeFast",
				"wiggleVibratoLargeSlow",
				"wiggleVibratoLargeSlower",
				"wiggleVibratoLargeSlowest",
				"wiggleVibratoLargestFastest",
				"wiggleVibratoLargestFasterStill",
				"wiggleVibratoLargestFaster",
				"wiggleVibratoLargestFast",
				"wiggleVibratoLargestSlow",
				"wiggleVIbratoLargestSlower",
				"wiggleVibratoLargestSlowest",
				"wiggleRandom1",
				"wiggleRandom2",
				"wiggleRandom3",
				"wiggleRandom4",
				"beamAccelRit1",
				"beamAccelRit2",
				"beamAccelRit3",
				"beamAccelRit4",
				"beamAccelRit5",
				"beamAccelRit6",
				"beamAccelRit7",
				"beamAccelRit8",
				"beamAccelRit9",
				"beamAccelRit10",
				"beamAccelRit11",
				"beamAccelRit12",
				"beamAccelRit13",
				"beamAccelRit14",
				"beamAccelRit15",
				"beamAccelRitFinal"
				);
				name = "Multi-segment lines";
			},
			{
				list = (
				"noteheadClusterSquareWhite",
				"noteheadClusterSquareBlack",
				"noteheadClusterRoundWhite",
				"noteheadClusterRoundBlack",
				"noteheadClusterDoubleWhole2nd",
				"noteheadClusterWhole2nd",
				"noteheadClusterHalf2nd",
				"noteheadClusterQuarter2nd",
				"noteheadClusterDoubleWhole3rd",
				"noteheadClusterWhole3rd",
				"noteheadClusterHalf3rd",
				"noteheadClusterQuarter3rd",
				"noteheadClusterDoubleWholeTop",
				"noteheadClusterDoubleWholeMiddle",
				"noteheadClusterDoubleWholeBottom",
				"noteheadClusterWholeTop",
				"noteheadClusterWholeMiddle",
				"noteheadClusterWholeBottom",
				"noteheadClusterHalfTop",
				"noteheadClusterHalfMiddle",
				"noteheadClusterHalfBottom",
				"noteheadClusterQuarterTop",
				"noteheadClusterQuarterMiddle",
				"noteheadClusterQuarterBottom",
				"noteheadDiamondClusterWhite2nd",
				"noteheadDiamondClusterBlack2nd",
				"noteheadDiamondClusterWhite3rd",
				"noteheadDiamondClusterBlack3rd",
				"noteheadDiamondClusterWhiteTop",
				"noteheadDiamondClusterWhiteMiddle",
				"noteheadDiamondClusterWhiteBottom",
				"noteheadDiamondClusterBlackTop",
				"noteheadDiamondClusterBlackMiddle",
				"noteheadDiamondClusterBlackBottom",
				"noteheadRectangularClusterBlackTop",
				"noteheadRectangularClusterBlackMiddle",
				"noteheadRectangularClusterBlackBottom",
				"noteheadRectangularClusterWhiteTop",
				"noteheadRectangularClusterWhiteMiddle",
				"noteheadRectangularClusterWhiteBottom"
				);
				name = "Note clusters";
			},
			{
				list = (
				"noteDoWhole",
				"noteReWhole",
				"noteMiWhole",
				"noteFaWhole",
				"noteSoWhole",
				"noteLaWhole",
				"noteTiWhole",
				"noteSiWhole",
				"noteDoHalf",
				"noteReHalf",
				"noteMiHalf",
				"noteFaHalf",
				"noteSoHalf",
				"noteLaHalf",
				"noteTiHalf",
				"noteSiHalf",
				"noteDoBlack",
				"noteReBlack",
				"noteMiBlack",
				"noteFaBlack",
				"noteSoBlack",
				"noteLaBlack",
				"noteTiBlack",
				"noteSiBlack",
				"noteAFlatWhole",
				"noteAWhole",
				"noteASharpWhole",
				"noteBFlatWhole",
				"noteBWhole",
				"noteBSharpWhole",
				"noteCFlatWhole",
				"noteCWhole",
				"noteCSharpWhole",
				"noteDFlatWhole",
				"noteDWhole",
				"noteDSharpWhole",
				"noteEFlatWhole",
				"noteEWhole",
				"noteESharpWhole",
				"noteFFlatWhole",
				"noteFWhole",
				"noteFSharpWhole",
				"noteGFlatWhole",
				"noteGWhole",
				"noteGSharpWhole",
				"noteHWhole",
				"noteHSharpWhole",
				"noteAFlatHalf",
				"noteAHalf",
				"noteASharpHalf",
				"noteBFlatHalf",
				"noteBHalf",
				"noteBSharpHalf",
				"noteCFlatHalf",
				"noteCHalf",
				"noteCSharpHalf",
				"noteDFlatHalf",
				"noteDHalf",
				"noteDSharpHalf",
				"noteEFlatHalf",
				"noteEHalf",
				"noteESharpHalf",
				"noteFFlatHalf",
				"noteFHalf",
				"noteFSharpHalf",
				"noteGFlatHalf",
				"noteGHalf",
				"noteGSharpHalf",
				"noteHHalf",
				"noteHSharpHalf",
				"noteAFlatBlack",
				"noteABlack",
				"noteASharpBlack",
				"noteBFlatBlack",
				"noteBBlack",
				"noteBSharpBlack",
				"noteCFlatBlack",
				"noteCBlack",
				"noteCSharpBlack",
				"noteDFlatBlack",
				"noteDBlack",
				"noteDSharpBlack",
				"noteEFlatBlack",
				"noteEBlack",
				"noteESharpBlack",
				"noteFFlatBlack",
				"noteFBlack",
				"noteFSharpBlack",
				"noteGFlatBlack",
				"noteGBlack",
				"noteGSharpBlack",
				"noteHBlack",
				"noteHSharpBlack",
				"noteEmptyWhole",
				"noteEmptyHalf",
				"noteEmptyBlack"
				);
				name = "Note name noteheads";
			},
			{
				list = (
				"noteheadDoubleWhole",
				"noteheadDoubleWholeSquare",
				"noteheadWhole",
				"noteheadHalf",
				"noteheadBlack",
				"noteheadNull",
				"noteheadXDoubleWhole",
				"noteheadXWhole",
				"noteheadXHalf",
				"noteheadXBlack",
				"noteheadXOrnate",
				"noteheadXOrnateEllipse",
				"noteheadPlusDoubleWhole",
				"noteheadPlusWhole",
				"noteheadPlusHalf",
				"noteheadPlusBlack",
				"noteheadCircleXDoubleWhole",
				"noteheadCircleXWhole",
				"noteheadCircleXHalf",
				"noteheadCircleX",
				"noteheadDoubleWholeWithX",
				"noteheadWholeWithX",
				"noteheadHalfWithX",
				"noteheadVoidWithX",
				"noteheadSquareWhite",
				"noteheadSquareBlack",
				"noteheadTriangleUpDoubleWhole",
				"noteheadTriangleUpWhole",
				"noteheadTriangleUpHalf",
				"noteheadTriangleUpWhite",
				"noteheadTriangleUpBlack",
				"noteheadTriangleLeftWhite",
				"noteheadTriangleLeftBlack",
				"noteheadTriangleRightWhite",
				"noteheadTriangleRightBlack",
				"noteheadTriangleDownDoubleWhole",
				"noteheadTriangleDownWhole",
				"noteheadTriangleDownHalf",
				"noteheadTriangleDownWhite",
				"noteheadTriangleDownBlack",
				"noteheadTriangleUpRightWhite",
				"noteheadTriangleUpRightBlack",
				"noteheadMoonWhite",
				"noteheadMoonBlack",
				"noteheadTriangleRoundDownWhite",
				"noteheadTriangleRoundDownBlack",
				"noteheadParenthesis",
				"noteheadSlashedBlack1",
				"noteheadSlashedBlack2",
				"noteheadSlashedHalf1",
				"noteheadSlashedHalf2",
				"noteheadSlashedWhole1",
				"noteheadSlashedWhole2",
				"noteheadSlashedDoubleWhole1",
				"noteheadSlashedDoubleWhole2",
				"noteheadDiamondDoubleWhole",
				"noteheadDiamondWhole",
				"noteheadDiamondHalf",
				"noteheadDiamondHalfWide",
				"noteheadDiamondBlack",
				"noteheadDiamondBlackWide",
				"noteheadDiamondWhite",
				"noteheadDiamondWhiteWide",
				"noteheadDiamondDoubleWholeOld",
				"noteheadDiamondWholeOld",
				"noteheadDiamondHalfOld",
				"noteheadDiamondBlackOld",
				"noteheadDiamondHalfFilled",
				"noteheadCircledBlack",
				"noteheadCircledHalf",
				"noteheadCircledWhole",
				"noteheadCircledDoubleWhole",
				"noteheadCircledBlackLarge",
				"noteheadCircledHalfLarge",
				"noteheadCircledWholeLarge",
				"noteheadCircledDoubleWholeLarge",
				"noteheadCircledXLarge",
				"noteheadLargeArrowUpDoubleWhole",
				"noteheadLargeArrowUpWhole",
				"noteheadLargeArrowUpHalf",
				"noteheadLargeArrowUpBlack",
				"noteheadLargeArrowDownDoubleWhole",
				"noteheadLargeArrowDownWhole",
				"noteheadLargeArrowDownHalf",
				"noteheadLargeArrowDownBlack",
				"noteheadParenthesisLeft",
				"noteheadParenthesisRight",
				"noteheadCircleSlash",
				"noteheadHeavyX",
				"noteheadHeavyXHat",
				"noteheadWholeFilled",
				"noteheadHalfFilled",
				"noteheadDiamondOpen"
				);
				name = "Noteheads";
			},
			{
				list = (
				"ottava",
				"ottavaAlta",
				"ottavaBassa",
				"ottavaBassaBa",
				"quindicesima",
				"quindicesimaAlta",
				"quindicesimaBassa",
				"ventiduesima",
				"ventiduesimaAlta",
				"ventiduesimaBassa",
				"octaveParensLeft",
				"octaveParensRight",
				"ottavaBassaVb",
				"quindicesimaBassaMb",
				"ventiduesimaBassaMb",
				"octaveBassa"
				);
				name = "Octaves";
			},
			{
				list = (
				"octaveLoco",
				"octaveBaselineA",
				"octaveSuperscriptA",
				"octaveBaselineB",
				"octaveSuperscriptB",
				"octaveBaselineM",
				"octaveSuperscriptM",
				"octaveBaselineV",
				"octaveSuperscriptV"
				);
				name = "Octaves supplement";
			},
			{
				list = ( );
				name = "Olympian Sagittal extension (extreme precision) accidental diacritics";
			},
			{
				list = (
				"organGermanCUpper",
				"organGermanCisUpper",
				"organGermanDUpper",
				"organGermanDisUpper",
				"organGermanEUpper",
				"organGermanFUpper",
				"organGermanFisUpper",
				"organGermanGUpper",
				"organGermanGisUpper",
				"organGermanAUpper",
				"organGermanBUpper",
				"organGermanHUpper",
				"organGermanCLower",
				"organGermanCisLower",
				"organGermanDLower",
				"organGermanDisLower",
				"organGermanELower",
				"organGermanFLower",
				"organGermanFisLower",
				"organGermanGLower",
				"organGermanGisLower",
				"organGermanALower",
				"organGermanBLower",
				"organGermanHLower",
				"organGermanOctaveUp",
				"organGerman2OctaveUp",
				"organGermanOctaveDown",
				"organGermanTie",
				"organGermanAugmentationDot",
				"organGermanBuxheimerSemibrevisRest",
				"organGermanBuxheimerMinimaRest",
				"organGermanSemibrevisRest",
				"organGermanMinimaRest",
				"organGermanSemiminimaRest",
				"organGermanFusaRest",
				"organGermanSemifusaRest",
				"organGermanBuxheimerBrevis3",
				"organGermanBuxheimerBrevis2",
				"organGermanBuxheimerSemibrevis",
				"organGermanSemibrevis",
				"organGermanMinima",
				"organGermanSemiminima",
				"organGermanFusa",
				"organGermanSemifusa",
				"organGerman2Minimae",
				"organGerman2Semiminimae",
				"organGerman2Fusae",
				"organGerman2Semifusae",
				"organGerman3Minimae",
				"organGerman3Semiminimae",
				"organGerman3Fusae",
				"organGerman3Semifusae",
				"organGerman4Minimae",
				"organGerman4Semiminimae",
				"organGerman4Fusae",
				"organGerman4Semifusae",
				"organGerman5Minimae",
				"organGerman5Semiminimae",
				"organGerman5Fusae",
				"organGerman5Semifusae",
				"organGerman6Minimae",
				"organGerman6Semiminimae",
				"organGerman6Fusae",
				"organGerman6Semifusae"
				);
				name = "German organ tablature";
			},
			{
				list = (
				"accidentalXenakisOneThirdToneSharp",
				"accidentalXenakisTwoThirdTonesSharp",
				"accidentalQuarterToneSharpBusotti",
				"accidentalSharpOneHorizontalStroke",
				"accidentalThreeQuarterTonesSharpBusotti",
				"accidentalQuarterToneSharpWiggle",
				"accidentalTavenerSharp",
				"accidentalTavenerFlat",
				"accidentalQuarterToneFlatPenderecki",
				"accidentalCommaSlashUp",
				"accidentalCommaSlashDown",
				"accidentalWilsonPlus",
				"accidentalWilsonMinus",
				"accidentalLargeDoubleSharp",
				"accidentalQuarterToneSharp4",
				"accidentalQuarterToneFlat4",
				"accidentalQuarterToneFlatFilledReversed",
				"accidentalSharpReversed",
				"accidentalNaturalReversed",
				"accidentalDoubleFlatReversed",
				"accidentalFlatTurned",
				"accidentalDoubleFlatTurned",
				"accidentalThreeQuarterTonesFlatGrisey",
				"accidentalThreeQuarterTonesFlatTartini",
				"accidentalQuarterToneFlatVanBlankenburg",
				"accidentalThreeQuarterTonesFlatCouper",
				"accidentalOneThirdToneSharpFerneyhough",
				"accidentalOneThirdToneFlatFerneyhough",
				"accidentalTwoThirdTonesSharpFerneyhough",
				"accidentalTwoThirdTonesFlatFerneyhough",
				"accidentalOneQuarterToneSharpFerneyhough",
				"accidentalOneQuarterToneFlatFerneyhough"
				);
				name = "Other accidentals";
			},
			{
				list = (
				"ornamentPortDeVoixV",
				"ornamentRightFacingHalfCircle",
				"ornamentLeftFacingHalfCircle",
				"ornamentRightFacingHook",
				"ornamentLeftFacingHook",
				"ornamentHookBeforeNote",
				"ornamentHookAfterNote",
				"ornamentUpCurve",
				"ornamentDownCurve",
				"ornamentShortObliqueLineBeforeNote",
				"ornamentShortObliqueLineAfterNote",
				"ornamentObliqueLineBeforeNote",
				"ornamentObliqueLineAfterNote",
				"ornamentDoubleObliqueLinesBeforeNote",
				"ornamentDoubleObliqueLinesAfterNote",
				"ornamentObliqueLineHorizBeforeNote",
				"ornamentObliqueLineHorizAfterNote",
				"ornamentComma",
				"ornamentShake3",
				"ornamentVerticalLine",
				"ornamentShakeMuffat1",
				"glissandoUp",
				"glissandoDown",
				"ornamentSchleifer",
				"ornamentPinceCouperin",
				"ornamentTremblementCouperin"
				);
				name = "Other baroque ornaments";
			},
			{
				list = (
				"pictStickShot",
				"pictScrapeCenterToEdge",
				"pictScrapeEdgeToCenter",
				"pictScrapeAroundRim",
				"pictOnRim",
				"pictOpenRimShot",
				"pictHalfOpen1",
				"pictHalfOpen2",
				"pictOpen",
				"pictDamp1",
				"pictDamp2",
				"pictDamp3",
				"pictDamp4",
				"pictRimShotOnStem",
				"pictCenter1",
				"pictCenter2",
				"pictCenter3",
				"pictRim1",
				"pictRim2",
				"pictRim3",
				"pictNormalPosition",
				"pictChokeCymbal",
				"pictRightHandSquare",
				"pictLeftHandCircle",
				"pictSwishStem",
				"pictTurnRightStem",
				"pictTurnLeftStem",
				"pictTurnRightLeftStem",
				"pictCrushStem",
				"pictDeadNoteStem",
				"pictScrapeAroundRimClockwise"
				);
				name = "Percussion playing technique pictograms";
			},
			{
				list = (
				"accidentalKoron",
				"accidentalSori" );
				name = "Persian accidentals";
			},
			{
				list = (
				"pluckedSnapPizzicatoBelow",
				"pluckedSnapPizzicatoAbove",
				"pluckedBuzzPizzicato",
				"pluckedLeftHandPizzicato",
				"arpeggiatoUp",
				"arpeggiatoDown",
				"pluckedWithFingernails",
				"pluckedFingernailFlick",
				"pluckedDamp",
				"pluckedDampAll",
				"pluckedPlectrum",
				"pluckedDampOnStem"
				);
				name = "Plucked techniques";
			},
			{
				list = (
				"ornamentPrecompSlide",
				"ornamentPrecompDescendingSlide",
				"ornamentPrecompAppoggTrill",
				"ornamentPrecompAppoggTrillSuffix",
				"ornamentPrecompTurnTrillDAnglebert",
				"ornamentPrecompSlideTrillDAnglebert",
				"ornamentPrecompSlideTrillMarpurg",
				"ornamentPrecompTurnTrillBach",
				"ornamentPrecompSlideTrillBach",
				"ornamentPrecompSlideTrillMuffat",
				"ornamentPrecompSlideTrillSuffixMuffat",
				"ornamentPrecompTrillSuffixDandrieu",
				"ornamentPrecompPortDeVoixMordent",
				"ornamentPrecompTrillWithMordent",
				"ornamentPrecompCadence",
				"ornamentPrecompCadenceWithTurn",
				"ornamentPrecompDoubleCadenceLowerPrefix",
				"ornamentPrecompCadenceUpperPrefix",
				"ornamentPrecompCadenceUpperPrefixTurn",
				"ornamentPrecompDoubleCadenceUpperPrefix",
				"ornamentPrecompDoubleCadenceUpperPrefixTurn",
				"ornamentPrecompMordentRelease",
				"ornamentPrecompMordentUpperPrefix",
				"ornamentPrecompInvertedMordentUpperPrefix",
				"ornamentPrecompTrillLowerSuffix"
				);
				name = "Precomposed trills and mordents";
			},
			{
				list = (
				"accSagittalSharp23SDown",
				"accSagittalFlat23SUp",
				"accSagittalSharp49SDown",
				"accSagittalFlat49SUp",
				"accSagittalSharp7v19CDown",
				"accSagittalFlat7v19CUp",
				"accSagittalSharp19CDown",
				"accSagittalFlat19CUp",
				"accSagittalSharp11v49CDown",
				"accSagittalFlat11v49CUp",
				"accSagittalSharp143CDown",
				"accSagittalFlat143CUp",
				"accSagittalSharp17kDown",
				"accSagittalFlat17kUp",
				"accSagittalSharp19sDown",
				"accSagittalFlat19sUp",
				"accSagittalSharp19sUp",
				"accSagittalFlat19sDown",
				"accSagittalSharp17kUp",
				"accSagittalFlat17kDown",
				"accSagittalSharp143CUp",
				"accSagittalFlat143CDown",
				"accSagittalSharp11v49CUp",
				"accSagittalFlat11v49CDown",
				"accSagittalSharp19CUp",
				"accSagittalFlat19CDown",
				"accSagittalSharp7v19CUp",
				"accSagittalFlat7v19CDown",
				"accSagittalSharp49SUp",
				"accSagittalFlat49SDown",
				"accSagittalSharp23SUp",
				"accSagittalFlat23SDown",
				"accSagittalSharp5v13MUp",
				"accSagittalFlat5v13MDown",
				"accSagittalSharp11v19MUp",
				"accSagittalFlat11v19MDown",
				"accSagittalSharp49MUp",
				"accSagittalFlat49MDown",
				"accSagittalSharp5v49MUp",
				"accSagittalFlat5v49MDown",
				"accSagittalSharp49LUp",
				"accSagittalFlat49LDown",
				"accSagittalSharp11v19LUp",
				"accSagittalFlat11v19LDown",
				"accSagittalSharp5v13LUp",
				"accSagittalFlat5v13LDown",
				"accSagittalUnused3",
				"accSagittalUnused4",
				"accSagittalDoubleSharp23SDown",
				"accSagittalDoubleFlat23SUp",
				"accSagittalDoubleSharp49SDown",
				"accSagittalDoubleFlat49SUp",
				"accSagittalDoubleSharp7v19CDown",
				"accSagittalDoubleFlat7v19CUp",
				"accSagittalDoubleSharp19CDown",
				"accSagittalDoubleFlat19CUp",
				"accSagittalDoubleSharp11v49CDown",
				"accSagittalDoubleFlat11v49CUp",
				"accSagittalDoubleSharp143CDown",
				"accSagittalDoubleFlat143CUp",
				"accSagittalDoubleSharp17kDown",
				"accSagittalDoubleFlat17kUp",
				"accSagittalDoubleSharp19sDown",
				"accSagittalDoubleFlat19sUp"
				);
				name = "Promethean Sagittal extension (high precision) multi-shaft accidentals";
			},
			{
				list = (
				"accSagittal19SchismaUp",
				"accSagittal19SchismaDown",
				"accSagittal17KleismaUp",
				"accSagittal17KleismaDown",
				"accSagittal143CommaUp",
				"accSagittal143CommaDown",
				"accSagittal11v49CommaUp",
				"accSagittal11v49CommaDown",
				"accSagittal19CommaUp",
				"accSagittal19CommaDown",
				"accSagittal7v19CommaUp",
				"accSagittal7v19CommaDown",
				"accSagittal49SmallDiesisUp",
				"accSagittal49SmallDiesisDown",
				"accSagittal23SmallDiesisUp",
				"accSagittal23SmallDiesisDown",
				"accSagittal5v13MediumDiesisUp",
				"accSagittal5v13MediumDiesisDown",
				"accSagittal11v19MediumDiesisUp",
				"accSagittal11v19MediumDiesisDown",
				"accSagittal49MediumDiesisUp",
				"accSagittal49MediumDiesisDown",
				"accSagittal5v49MediumDiesisUp",
				"accSagittal5v49MediumDiesisDown",
				"accSagittal49LargeDiesisUp",
				"accSagittal49LargeDiesisDown",
				"accSagittal11v19LargeDiesisUp",
				"accSagittal11v19LargeDiesisDown",
				"accSagittal5v13LargeDiesisUp",
				"accSagittal5v13LargeDiesisDown"
				);
				name = "Promethean Sagittal extension (high precision) single-shaft accidentals";
			},
			{
				list = (
				"luteStaff6Lines",
				"luteStaff6LinesWide",
				"luteStaff6LinesNarrow",
				"luteBarlineStartRepeat",
				"luteBarlineEndRepeat",
				"luteBarlineFinal",
				"luteDurationDoubleWhole",
				"luteDurationWhole",
				"luteDurationHalf",
				"luteDurationQuarter",
				"luteDuration8th",
				"luteDuration16th",
				"luteDuration32nd",
				"luteFingeringRHThumb",
				"luteFingeringRHFirst",
				"luteFingeringRHSecond",
				"luteFingeringRHThird"
				);
				name = "Renaissance lute tablature";
			},
			{
				list = (
				"repeatLeft",
				"repeatRight",
				"repeatRightLeft",
				"repeatDots",
				"repeatDot",
				"dalSegno",
				"daCapo",
				"segno",
				"coda",
				"codaSquare",
				"segnoSerpent1",
				"segnoSerpent2",
				"leftRepeatSmall",
				"rightRepeatSmall"
				);
				name = "Repeats";
			},
			{
				list = (
				"restMaxima",
				"restLonga",
				"restDoubleWhole",
				"restWhole",
				"restHalf",
				"restQuarter",
				"rest8th",
				"rest16th",
				"rest32nd",
				"rest64th",
				"rest128th",
				"rest256th",
				"rest512th",
				"rest1024th",
				"restHBar",
				"restHBarLeft",
				"restHBarMiddle",
				"restHBarRight",
				"restQuarterOld",
				"restDoubleWholeLegerLine",
				"restWholeLegerLine",
				"restHalfLegerLine",
				"restQuarterZ"
				);
				name = "Rests";
			},
			{
				list = (
				"noteheadRoundBlackLarge",
				"noteheadRoundWhiteLarge",
				"noteheadRoundWhiteWithDotLarge",
				"noteheadRoundBlack",
				"noteheadRoundWhite",
				"noteheadRoundWhiteWithDot",
				"noteheadRoundBlackSlashedLarge",
				"noteheadRoundWhiteSlashedLarge",
				"noteheadRoundBlackSlashed",
				"noteheadRoundWhiteSlashed",
				"noteheadSquareBlackLarge",
				"noteheadSquareBlackWhite",
				"noteheadRoundBlackDoubleSlashed",
				"noteheadRoundWhiteDoubleSlashed"
				);
				name = "Round and square noteheads";
			},
			{
				list = (
				"pictFlexatone",
				"pictMaraca",
				"pictMaracas",
				"pictCabasa",
				"pictThundersheet",
				"pictVibraslap",
				"pictSistrum",
				"pictRainstick",
				"pictChainRattle"
				);
				name = "Shakers or rattles pictograms";
			},
			{
				list = (
				"noteShapeRoundWhite",
				"noteShapeRoundBlack",
				"noteShapeSquareWhite",
				"noteShapeSquareBlack",
				"noteShapeTriangleRightWhite",
				"noteShapeTriangleRightBlack",
				"noteShapeTriangleLeftWhite",
				"noteShapeTriangleLeftBlack",
				"noteShapeDiamondWhite",
				"noteShapeDiamondBlack",
				"noteShapeTriangleUpWhite",
				"noteShapeTriangleUpBlack",
				"noteShapeMoonWhite",
				"noteShapeMoonBlack",
				"noteShapeTriangleRoundWhite",
				"noteShapeTriangleRoundBlack",
				"noteShapeKeystoneWhite",
				"noteShapeKeystoneBlack",
				"noteShapeQuarterMoonWhite",
				"noteShapeQuarterMoonBlack",
				"noteShapeIsoscelesTriangleWhite",
				"noteShapeIsoscelesTriangleBlack",
				"noteShapeMoonLeftWhite",
				"noteShapeMoonLeftBlack",
				"noteShapeArrowheadLeftWhite",
				"noteShapeArrowheadLeftBlack",
				"noteShapeTriangleRoundLeftWhite",
				"noteShapeTriangleRoundLeftBlack"
				);
				name = "Shape note noteheads";
			},
			{
				list = (
				"noteShapeRoundDoubleWhole",
				"noteShapeSquareDoubleWhole",
				"noteShapeTriangleRightDoubleWhole",
				"noteShapeTriangleLeftDoubleWhole",
				"noteShapeDiamondDoubleWhole",
				"noteShapeTriangleUpDoubleWhole",
				"noteShapeMoonDoubleWhole",
				"noteShapeTriangleRoundDoubleWhole",
				"noteShapeKeystoneDoubleWhole",
				"noteShapeQuarterMoonDoubleWhole",
				"noteShapeIsoscelesTriangleDoubleWhole",
				"noteShapeMoonLeftDoubleWhole",
				"noteShapeArrowheadLeftDoubleWhole",
				"noteShapeTriangleRoundLeftDoubleWhole"
				);
				name = "Shape note noteheads supplement";
			},
			{
				list = (
				"smnSharp",
				"smnSharpWhite",
				"smnFlat",
				"smnFlatWhite",
				"smnHistorySharp",
				"smnHistoryDoubleSharp",
				"smnHistoryFlat",
				"smnHistoryDoubleFlat",
				"smnNatural",
				"smnSharpDown",
				"smnSharpWhiteDown"
				);
				name = "Simplified Music Notation";
			},
			{
				list = (
				"accidentalSims12Down",
				"accidentalSims6Down",
				"accidentalSims4Down",
				"accidentalSims12Up",
				"accidentalSims6Up",
				"accidentalSims4Up"
				);
				name = "Sims accidentals (72-EDO)";
			},
			{
				list = (
				"noteheadSlashVerticalEnds",
				"noteheadSlashHorizontalEnds",
				"noteheadSlashWhiteWhole",
				"noteheadSlashWhiteHalf",
				"noteheadSlashDiamondWhite",
				"noteheadSlashVerticalEndsSmall",
				"noteheadSlashX",
				"noteheadSlashVerticalEndsMuted",
				"noteheadSlashHorizontalEndsMuted",
				"noteheadSlashWhiteMuted",
				"noteheadSlashWhiteDoubleWhole"
				);
				name = "Slash noteheads";
			},
			{
				list = (
				"accSagittalSharp25SDown",
				"accSagittalFlat25SUp",
				"accSagittalSharp7CDown",
				"accSagittalFlat7CUp",
				"accSagittalSharp5CDown",
				"accSagittalFlat5CUp",
				"accSagittalSharp5v7kDown",
				"accSagittalFlat5v7kUp",
				"accSagittalSharp",
				"accSagittalFlat",
				"accSagittalUnused1",
				"accSagittalUnused2",
				"accSagittalSharp5v7kUp",
				"accSagittalFlat5v7kDown",
				"accSagittalSharp5CUp",
				"accSagittalFlat5CDown",
				"accSagittalSharp7CUp",
				"accSagittalFlat7CDown",
				"accSagittalSharp25SUp",
				"accSagittalFlat25SDown",
				"accSagittalSharp35MUp",
				"accSagittalFlat35MDown",
				"accSagittalSharp11MUp",
				"accSagittalFlat11MDown",
				"accSagittalSharp11LUp",
				"accSagittalFlat11LDown",
				"accSagittalSharp35LUp",
				"accSagittalFlat35LDown",
				"accSagittalDoubleSharp25SDown",
				"accSagittalDoubleFlat25SUp",
				"accSagittalDoubleSharp7CDown",
				"accSagittalDoubleFlat7CUp",
				"accSagittalDoubleSharp5CDown",
				"accSagittalDoubleFlat5CUp",
				"accSagittalDoubleSharp5v7kDown",
				"accSagittalDoubleFlat5v7kUp",
				"accSagittalDoubleSharp",
				"accSagittalDoubleFlat"
				);
				name = "Spartan Sagittal multi-shaft accidentals";
			},
			{
				list = (
				"accSagittal5v7KleismaUp",
				"accSagittal5v7KleismaDown",
				"accSagittal5CommaUp",
				"accSagittal5CommaDown",
				"accSagittal7CommaUp",
				"accSagittal7CommaDown",
				"accSagittal25SmallDiesisUp",
				"accSagittal25SmallDiesisDown",
				"accSagittal35MediumDiesisUp",
				"accSagittal35MediumDiesisDown",
				"accSagittal11MediumDiesisUp",
				"accSagittal11MediumDiesisDown",
				"accSagittal11LargeDiesisUp",
				"accSagittal11LargeDiesisDown",
				"accSagittal35LargeDiesisUp",
				"accSagittal35LargeDiesisDown"
				);
				name = "Spartan Sagittal single-shaft accidentals";
			},
			{
				list = (
				"brace",
				"reversedBrace",
				"bracket",
				"bracketTop",
				"bracketBottom",
				"reversedBracketTop",
				"reversedBracketBottom",
				"systemDivider",
				"systemDividerLong",
				"systemDividerExtraLong",
				"splitBarDivider",
				"staffDivideArrowDown",
				"staffDivideArrowUp",
				"staffDivideArrowUpDown"
				);
				name = "Staff brackets and dividers";
			},
			{
				list = (
				"accidentalFlat",
				"accidentalNatural",
				"accidentalSharp",
				"accidentalDoubleSharp",
				"accidentalDoubleFlat",
				"accidentalTripleSharp",
				"accidentalTripleFlat",
				"accidentalNaturalFlat",
				"accidentalNaturalSharp",
				"accidentalSharpSharp",
				"accidentalParensLeft",
				"accidentalParensRight",
				"accidentalBracketLeft",
				"accidentalBracketRight"
				);
				name = "Standard accidentals (12-EDO)";
			},
			{
				list = (
				"csymAccidentalFlat",
				"csymAccidentalNatural",
				"csymAccidentalSharp",
				"csymAccidentalDoubleSharp",
				"csymAccidentalDoubleFlat",
				"csymAccidentalTripleSharp",
				"csymAccidentalTripleFlat"
				);
				name = "Standard accidentals for chord symbols";
			},
			{
				list = (
				"staff1Line",
				"staff2Lines",
				"staff3Lines",
				"staff4Lines",
				"staff5Lines",
				"staff6Lines",
				"staff1LineWide",
				"staff2LinesWide",
				"staff3LinesWide",
				"staff4LinesWide",
				"staff5LinesWide",
				"staff6LinesWide",
				"staff1LineNarrow",
				"staff2LinesNarrow",
				"staff3LinesNarrow",
				"staff4LinesNarrow",
				"staff5LinesNarrow",
				"staff6LinesNarrow",
				"legerLine",
				"legerLineWide",
				"legerLineNarrow"
				);
				name = "Staves";
			},
			{
				list = (
				"accidentalQuarterToneFlatStein",
				"accidentalThreeQuarterTonesFlatZimmermann",
				"accidentalQuarterToneSharpStein",
				"accidentalThreeQuarterTonesSharpStein",
				"accidentalNarrowReversedFlat",
				"accidentalNarrowReversedFlatAndFlat"
				);
				name = "Stein-Zimmermann accidentals (24-EDO)";
			},
			{
				list = (
				"stem",
				"stemSprechgesang",
				"stemSwished",
				"stemPendereckiTremolo",
				"stemSulPonticello",
				"stemBowOnBridge",
				"stemBowOnTailpiece",
				"stemBuzzRoll",
				"stemDamp",
				"stemVibratoPulse",
				"stemMultiphonicsBlack",
				"stemMultiphonicsWhite",
				"stemMultiphonicsBlackWhite",
				"stemSussurando",
				"stemRimShot",
				"stemHarpStringNoise"
				);
				name = "Stems";
			},
			{
				list = (
				"accidentalRaisedStockhausen",
				"accidentalLoweredStockhausen",
				"accidentalFlatRaisedStockhausen",
				"accidentalFlatLoweredStockhausen",
				"accidentalNaturalRaisedStockhausen",
				"accidentalNaturalLoweredStockhausen",
				"accidentalSharpRaisedStockhausen",
				"accidentalSharpLoweredStockhausen",
				"accidentalOneQuarterToneSharpStockhausen",
				"accidentalOneQuarterToneFlatStockhausen",
				"accidentalThreeQuarterTonesSharpStockhausen",
				"accidentalFlatRepeatedSpaceStockhausen",
				"accidentalFlatRepeatedLineStockhausen",
				"accidentalSharpRepeatedSpaceStockhausen",
				"accidentalSharpRepeatedLineStockhausen"
				);
				name = "Stockhausen accidentals (24-EDO)";
			},
			{
				list = (
				"stringsDownBow",
				"stringsDownBowTurned",
				"stringsUpBow",
				"stringsUpBowTurned",
				"stringsHarmonic",
				"stringsHalfHarmonic",
				"stringsMuteOn",
				"stringsMuteOff",
				"stringsBowBehindBridge",
				"stringsBowOnBridge",
				"stringsBowOnTailpiece",
				"stringsOverpressureDownBow",
				"stringsOverpressureUpBow",
				"stringsOverpressurePossibileDownBow",
				"stringsOverpressurePossibileUpBow",
				"stringsOverpressureNoDirection",
				"stringsJeteAbove",
				"stringsJeteBelow",
				"stringsFouette",
				"stringsVibratoPulse",
				"stringsThumbPosition",
				"stringsThumbPositionTurned",
				"stringsChangeBowDirection",
				"stringsBowBehindBridgeOneString",
				"stringsBowBehindBridgeTwoStrings",
				"stringsBowBehindBridgeThreeStrings",
				"stringsBowBehindBridgeFourStrings"
				);
				name = "String techniques";
			},
			{
				list = (
				"timeSig0",
				"timeSig1",
				"timeSig2",
				"timeSig3",
				"timeSig4",
				"timeSig5",
				"timeSig6",
				"timeSig7",
				"timeSig8",
				"timeSig9",
				"timeSigCommon",
				"timeSigCutCommon",
				"timeSigPlus",
				"timeSigPlusSmall",
				"timeSigFractionalSlash",
				"timeSigEquals",
				"timeSigMinus",
				"timeSigMultiply",
				"timeSigParensLeftSmall",
				"timeSigParensRightSmall",
				"timeSigParensLeft",
				"timeSigParensRight",
				"timeSigComma",
				"timeSigFractionQuarter",
				"timeSigFractionHalf",
				"timeSigFractionThreeQuarters",
				"timeSigFractionOneThird",
				"timeSigFractionTwoThirds",
				"timeSigX",
				"timeSigOpenPenderecki",
				"timeSigCombNumerator",
				"timeSigCombDenominator"
				);
				name = "Time signatures";
			},
			{
				list = (
				"timeSig0Reversed",
				"timeSig1Reversed",
				"timeSig2Reversed",
				"timeSig3Reversed",
				"timeSig4Reversed",
				"timeSig5Reversed",
				"timeSig6Reversed",
				"timeSig7Reversed",
				"timeSig8Reversed",
				"timeSig9Reversed",
				"timeSigCommonReversed",
				"timeSigCutCommonReversed"
				);
				name = "Reversed time signatures";
			},
			{
				list = (
				"timeSigBracketLeft",
				"timeSigBracketRight",
				"timeSigBracketLeftSmall",
				"timeSigBracketRightSmall",
				"timeSigSlash",
				"timeSigCut2",
				"timeSigCut3"
				);
				name = "Time signatures supplement";
			},
			{
				list = (
				"timeSig0Turned",
				"timeSig1Turned",
				"timeSig2Turned",
				"timeSig3Turned",
				"timeSig4Turned",
				"timeSig5Turned",
				"timeSig6Turned",
				"timeSig7Turned",
				"timeSig8Turned",
				"timeSig9Turned",
				"timeSigCommonTurned",
				"timeSigCutCommonTurned"
				);
				name = "Turned time signatures";
			},
			{
				list = (
				"tremolo1",
				"tremolo2",
				"tremolo3",
				"tremolo4",
				"tremolo5",
				"tremoloFingered1",
				"tremoloFingered2",
				"tremoloFingered3",
				"tremoloFingered4",
				"tremoloFingered5",
				"buzzRoll",
				"pendereckiTremolo",
				"unmeasuredTremolo",
				"unmeasuredTremoloSimple",
				"tremoloDivisiDots2",
				"tremoloDivisiDots3",
				"tremoloDivisiDots4",
				"tremoloDivisiDots6",
				"stockhausenTremolo",
				"oneHandedRollStevens",
				"doubleLateralRollStevens"
				);
				name = "Tremolos";
			},
			{
				list = (
				"accSagittal23CommaUp",
				"accSagittal23CommaDown",
				"accSagittal5v19CommaUp",
				"accSagittal5v19CommaDown",
				"accSagittal5v23SmallDiesisUp",
				"accSagittal5v23SmallDiesisDown",
				"accSagittalSharp5v23SDown",
				"accSagittalFlat5v23SUp",
				"accSagittalSharp5v19CDown",
				"accSagittalFlat5v19CUp",
				"accSagittalSharp23CDown",
				"accSagittalFlat23CUp",
				"accSagittalSharp23CUp",
				"accSagittalFlat23CDown",
				"accSagittalSharp5v19CUp",
				"accSagittalFlat5v19CDown",
				"accSagittalSharp5v23SUp",
				"accSagittalFlat5v23SDown",
				"accSagittalDoubleSharp5v23SDown",
				"accSagittalDoubleFlat5v23SUp",
				"accSagittalDoubleSharp5v19CDown",
				"accSagittalDoubleFlat5v19CUp",
				"accSagittalDoubleSharp23CDown",
				"accSagittalDoubleFlat23CUp"
				);
				name = "Trojan Sagittal extension (12-EDO relative) accidentals";
			},
			{
				list = (
				"pictGlsp",
				"pictXyl",
				"pictXylTenor",
				"pictXylBass",
				"pictXylTrough",
				"pictXylTenorTrough",
				"pictMar",
				"pictVib",
				"pictVibMotorOff",
				"pictEmptyTrap",
				"pictGlspSmithBrindle",
				"pictXylSmithBrindle",
				"pictMarSmithBrindle",
				"pictVibSmithBrindle",
				"pictCrotales",
				"pictSteelDrums",
				"pictCelesta",
				"pictLithophone",
				"pictTubaphone"
				);
				name = "Tuned mallet percussion pictograms";
			},
			{
				list = (
				"tuplet0",
				"tuplet1",
				"tuplet2",
				"tuplet3",
				"tuplet4",
				"tuplet5",
				"tuplet6",
				"tuplet7",
				"tuplet8",
				"tuplet9",
				"tupletColon"
				);
				name = "Tuplets";
			},
			{
				list = (
				"accidental1CommaSharp",
				"accidental2CommaSharp",
				"accidental3CommaSharp",
				"accidental5CommaSharp",
				"accidental1CommaFlat",
				"accidental2CommaFlat",
				"accidental3CommaFlat",
				"accidental4CommaFlat"
				);
				name = "Turkish folk music accidentals";
			},
			{
				list = (
				"vocalMouthClosed",
				"vocalMouthSlightlyOpen",
				"vocalMouthOpen",
				"vocalMouthWideOpen",
				"vocalMouthPursed",
				"vocalSprechgesang",
				"vocalsSussurando",
				"vocalNasalVoice",
				"vocalTongueClickStockhausen",
				"vocalFingerClickStockhausen",
				"vocalTongueFingerClickStockhausen",
				"vocalHalbGesungen"
				);
				name = "Vocal techniques";
			},
			{
				list = (
				"pictSlideWhistle",
				"pictBirdWhistle",
				"pictPoliceWhistle",
				"pictSiren",
				"pictWindMachine",
				"pictCarHorn",
				"pictKlaxonHorn",
				"pictDuckCall",
				"pictWindWhistle",
				"pictMegaphone",
				"pictLotusFlute"
				);
				name = "Whistles and aerophones pictograms";
			},
			{
				list = (
				"doubleTongueAbove",
				"doubleTongueBelow",
				"tripleTongueAbove",
				"tripleTongueBelow",
				"windClosedHole",
				"windThreeQuartersClosedHole",
				"windHalfClosedHole1",
				"windHalfClosedHole2",
				"windHalfClosedHole3",
				"windOpenHole",
				"windTrillKey",
				"windFlatEmbouchure",
				"windSharpEmbouchure",
				"windRelaxedEmbouchure",
				"windLessRelaxedEmbouchure",
				"windTightEmbouchure",
				"windLessTightEmbouchure",
				"windVeryTightEmbouchure",
				"windWeakAirPressure",
				"windStrongAirPressure",
				"windReedPositionNormal",
				"windReedPositionOut",
				"windReedPositionIn",
				"windMultiphonicsBlackStem",
				"windMultiphonicsWhiteStem",
				"windMultiphonicsBlackWhiteStem",
				"windMouthpiecePop",
				"windRimOnly"
				);
				name = "Wind techniques";
			},
			{
				list = (
				"pictWoodBlock",
				"pictTempleBlocks",
				"pictClaves",
				"pictGuiro",
				"pictRatchet",
				"pictFootballRatchet",
				"pictWhip",
				"pictBoardClapper",
				"pictCastanets",
				"pictCastanetsWithHandle",
				"pictQuijada",
				"pictBambooScraper",
				"pictRecoReco"
				);
				name = "Wooden struck or scraped percussion pictograms";
			},
			{
				list = (
				"accidentalWyschnegradsky1TwelfthsSharp",
				"accidentalWyschnegradsky2TwelfthsSharp",
				"accidentalWyschnegradsky3TwelfthsSharp",
				"accidentalWyschnegradsky4TwelfthsSharp",
				"accidentalWyschnegradsky5TwelfthsSharp",
				"accidentalWyschnegradsky6TwelfthsSharp",
				"accidentalWyschnegradsky7TwelfthsSharp",
				"accidentalWyschnegradsky8TwelfthsSharp",
				"accidentalWyschnegradsky9TwelfthsSharp",
				"accidentalWyschnegradsky10TwelfthsSharp",
				"accidentalWyschnegradsky11TwelfthsSharp",
				"accidentalWyschnegradsky1TwelfthsFlat",
				"accidentalWyschnegradsky2TwelfthsFlat",
				"accidentalWyschnegradsky3TwelfthsFlat",
				"accidentalWyschnegradsky4TwelfthsFlat",
				"accidentalWyschnegradsky5TwelfthsFlat",
				"accidentalWyschnegradsky6TwelfthsFlat",
				"accidentalWyschnegradsky7TwelfthsFlat",
				"accidentalWyschnegradsky8TwelfthsFlat",
				"accidentalWyschnegradsky9TwelfthsFlat",
				"accidentalWyschnegradsky10TwelfthsFlat",
				"accidentalWyschnegradsky11TwelfthsFlat"
				);
				name = "Wyschnegradsky accidentals (72-EDO)";
			},
			);
		},
	);
}
